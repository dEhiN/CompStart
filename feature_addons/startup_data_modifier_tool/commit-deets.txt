commit 4537f8ac67508c4b86c258698c8808b5d7e61c60
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 23:32:49 2024 -0500

    Added call to function generate_user_edited_data
    from json_pruner in module jsonfn
    
    Updated function json_pruner to print out the
    item requested to be deleted as well as the rest
    of the items data. Also added a call to the
    function generate_user_edited_data.
    
    However, passing in just the Items array causes
    the JSON data validation to fail. Will need to
    figure out a solution. Possible options are:
    
    1. Modify the generate_user_edited_data
    function to allow for an Items array to be passed
    in.
    
    2. Modify the json_pruner function to pass in
    updated JSON data.
    
    3. Modify a mix of both functions
    to allow for a single startup item to be passed in
    but specified to be removed.
    
    4. Create a new function to take the Items array
    and make a fully formed startup JSON object from
    it.
    
    Most likely, will go with option 3 since the
    generate_user_edited_data is meant to be used for
    all scenarios where the user is editing existing
    startup data. There is already the ability to
    pass in just a single startup item and also to
    specify if that startup item is to be added to the
    existing full startup data or replace an existing
    item. It shouldn't be hard to modify the function
    to allow the startup item to be removed and
    specify that.

commit afec90bd0c1824641a19338a1807b354788c14fc
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 23:14:26 2024 -0500

    Minor update to the call to the function user_menu_chooser from the function new_file_chooser so that the quit program option isn't shown during this menu

commit 57a7731a268a427b20f6e5f94a1a530aa748b329
Merge: 015199e ad217e1
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 23:12:20 2024 -0500

    Merge branch 'features/startup_data_modifier_tool' into dEhiN/issue5

commit ad217e1dd2166c098e9e502f7d1f2fc10a95dff4
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 23:11:22 2024 -0500

    Renamed the function generate_json_data to generate_new_json_data in the data_generate module
    
    Refactored that function to be solely for generating new JSON data. Removed the new_file parameter and also the **kwargs parameter, leaving only the is_default parameter.
    
    Changed the code in the function as well as the call to that function from the jsonfn module.
    
    This change allows the generate_user_edited_data function to be solely used for generating JSON data that the user edits.

commit 015199eb79fbcd0ace7652cffaa86d7138d6296a
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 22:31:42 2024 -0500

    Added the ability to choose, when displaying a
    menu, whether to add a menu option to quit the
    program or not
    
    Refactored the function user_menu_chooser in the
    chooser module to take in an optional parameter
    called allow_quit. It's a boolean that defaults to
    true. When it's true, a final menu option to quit
    the program will be shown for whatever menu is
    being displayed. If it's false, this quit option
    won't be shown.
    
    Also reworded the menu option in the function
    json_editor in the jsonfn module to save the full
    startup data from 'save the current startup data'
    to 'save full startup data to disk'. This
    rewording mirrors the one to save a specific
    startup item.

commit 6546a5ecdcd8fd06789627d5fd9344cb1328727f
Merge: 76db3b1 5782d60
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 15:02:47 2024 -0500

    Merge branch 'features/startup_data_modifier_tool'
    into dEhiN/issue5 to add changes from commits
    96a47ade and 5782d606 into this branch

commit 76db3b1cf652928cc6b5dd606226376ccb4fe7ca
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 15:02:18 2024 -0500

    Revert "Created this branch because there the changes made in commit eccc41b8 didn't include everything."
    
    This reverts commit a4ecff6e3158e8cab89721cc3c464c839313428c.

commit da4010ae24ce3fe486920ad28b1b32696c04393b
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 15:02:14 2024 -0500

    Revert "Cleaned up the testing directory"
    
    This reverts commit 6601c20a7821d060f162c76d4473664b4f478c12.

commit 6601c20a7821d060f162c76d4473664b4f478c12
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 14:54:02 2024 -0500

    Cleaned up the testing directory
    
    Moved the quick_test.py from the branch root
    folder to the testing folder and renamed it to
    json_validator_quick_test.py to better reflect its
    purpose.
    
    Also renamed test.py within the testing folder to
    old_unittest_test.py to also better reflect its
    purpose, that it's no longer being used, and that
    it was used as unit testing.
    
    Deleted the save_fn_test.txt since the three
    versions to keep for now were renamed. Finally,
    saved the unittest_data.json which formatted the
    JSON data.

commit a4ecff6e3158e8cab89721cc3c464c839313428c
Author: David <hiranwatson@gmail.com>
Date:   Mon Mar 4 18:08:02 2024 -0500

    Created this branch because there the changes made in commit eccc41b8 didn't include everything.
    
    Issue #15 was closed prematurely: startup.ps1 needs to be updated to reflect the change in the JSON schemas.

commit 5782d606841b815f6a97381a507704f908ce4101
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 14:54:02 2024 -0500

    Cleaned up the testing directory
    
    Moved the quick_test.py from the branch root
    folder to the testing folder and renamed it to
    json_validator_quick_test.py to better reflect its
    purpose.
    
    Also renamed test.py within the testing folder to
    old_unittest_test.py to also better reflect its
    purpose, that it's no longer being used, and that
    it was used as unit testing.
    
    Deleted the save_fn_test.txt since the three
    versions to keep for now were renamed. Finally,
    saved the unittest_data.json which formatted the
    JSON data.

commit 20ef0ede71f906898bc38567102925c1592d8f31
Author: David <hiranwatson@gmail.com>
Date:   Tue Mar 5 14:45:26 2024 -0500

    Set up environment to test the startup.ps1 script
    with the changes made through demord.py
    
    Copied startup.ps1 from the project root folder to
    the branch root folder and renamed it to
    test_demord-startup.ps1. Modified it to
    automatically open the startup_data.json file in
    the same branch root folder.
    
    Tested using Windows Terminal and python.exe
    making changes the startup file using demord.py
    and then tested running the PowerShell script to
    see that the changes work fine.
    
    Everything was a success!
    
    Noted one minor edit that could be made: some sort
    of reminder to the user after they make a change
    to item arguments to save, or, remove the ability
    to quit the whole program from the edit/add item
    arguments menu. I made the mistake initially of
    changing an item argument for item 3 and then
    quitting the program.

commit 96a47adec21dd98a261b6f5d0d1638a9b7221569
Author: David <hiranwatson@gmail.com>
Date:   Mon Mar 4 18:08:02 2024 -0500

    Created this branch because there the changes made in commit eccc41b8 didn't include everything.
    
    Issue #15 was closed prematurely: startup.ps1 needs to be updated to reflect the change in the JSON schemas.

commit f6c87cb1caf32845d5be3164bb74cf3febdefbb2
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 18:36:58 2024 -0500

    Minor changes to json_save and json_prune
    functions
    
    Renamed the functions to json_saver and
    json_pruner to keep the naming in line with all
    the other json functions in the jsonfn module.
    Updated calls to those functions from json_editor.

commit cadc888ed1af139133451c27c07f253ab138bd82
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 02:22:58 2024 -0500

    Started work on issue #5
    
    Created a function called json_prune in the jsonfn
    module. Updated the json_editor function to ask
    the user which startup item to remove and then
    call that function.
    
    So far, the function removes the item and then
    prints that out, but doesn't make any permanent
    changes.

commit dfb94dbafc5d2f2b50236381b416ec167d5828db
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 00:46:20 2024 -0500

    Resolved issue #17
    
    Added a function called json_save in the jsonfn
    module. Similar to the code for saving a single
    startup item, this function calls the function
    generate_edited_user_data in the data_generate
    module.
    
    Overall the json_save function allows
    json_editor to have a save menu option to save the
    full startup data. This means that a user can make
    a change to a startup item and save just that item
    in the menu for editing a single startup item. A
    user can also make a change to one or more startup
    items and then save them all at once.

commit 6400a4a28543171dc97dad7171334e7d9cc3bb6c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 00:16:04 2024 -0500

    Added the menu option to save the current startup data in the function json_editor

commit 6171120d5cfbe806f09047edeadaf7f7f1e7b50a
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 00:08:48 2024 -0500

    Removed an else block that was no longer needed in the function edit_startup_item in the module startup_edit

commit b59389fc141becc63400db36714a1fa723ef41c7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Mar 3 00:06:34 2024 -0500

    Cleanup of import statements and commented old code

commit 43676d66ffa08e04179423a9690c93dd5184a6c3
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Sat Mar 2 21:41:20 2024 -0500

    Confirmed that the save functionality for a single
    startup item works
    
    Edited the save_startup_item function in the
    module startup_add to properly save the passed-in
    changed startup item to the startup_data.json
    file.
    
    Tested this by editing both items 2 and 3 which
    reflects in the updated startup_data.json file.

commit 00b79896ab3393dd917a35cd8d39ae27cad6537b
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Sat Mar 2 20:02:32 2024 -0500

    Completed step 2 of the necessary changes
    
    In the comments for issue #15, the second step of
    changes to make is:
    
    2. Update the code listed in the previous comment
    to remove the if arg_count >= 2 conditional
    
    The reference is to the function
    prettify_startup_item in the pretty module. Due to
    the changes made in the previous commit to how
    the ArgumentsList property is formatted, there is
    no need for the nested if block checking for when
    arg_count is equal to or greater than 2.
    
    While testing the changes, encountered an error
    where changes made to the last startup item would
    cause the function generate_user_edited_data in
    the data_generate module to fail. The issue was in
    the if statement checking to see, when only one
    startup item has been changed, which item number.

commit eccc41b8083e3e00f4def25db0a72282c21e6928
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Sat Mar 2 19:21:58 2024 -0500

    Updated the JSON schemas
    
    As mentioned in a comment on issue #15, the first
    step to fix the issue is:
    
    1. Change the startup item and startup data JSON
    schemas so the ArgumentList property is only one
    array of strings
    
    Also created a quick_test.py file on the same
    level as demord.py to call the json_data_validator
    function in the helper module and test both
    schemas to confirm the changes validate.

commit d6709751b2b8623ce24d9a0c62c3abe5661c0940
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Fri Mar 1 00:41:03 2024 -0500

    Created copy of save_fn_test file as save_fn_test--item2v2

commit 42c6d0d0d56aac8e8f0fdfa60ca0608d620a6355
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Fri Mar 1 00:36:47 2024 -0500

    Coded in add_startup_item_arguments_list
    
    Wrote up the function
    add_startup_item_arguments_list in the module
    startup_add. Tested it out using item 2 from the
    default startup data. Saved the test to
    save_fn_test and it fully works.
    
    Now, need to test the same functionality with item
    1 from the default startup data.

commit 9d92297378a6ea2b873edf5f7cc87c9d5518ef94
Author: Hiran Watson <hiranwatson@gmail.com>
Date:   Thu Feb 29 20:32:57 2024 -0500

    Started refactoring of code to use the function
    add_startup_item_arguments_list for every call to
    add a startup item argument
    
    As written in the comments for issue12 on GitHub,
    the module startup_add contains the function
    add_startup_item_arguments_list. This function
    should be used for every time a user wants to add
    a new item argument. This includes both when
    working with a startup item that has existing
    arguments and one that doesn't.
    
    Prior to this refactoring, the function
    edit_startup_item_arguments_list in the module
    startup_edit had code to directly take in a
    new argument when the user wanted to add an
    argument to a startup item with existing
    arguments.
    
    The code updated in this commit consists of
    changes to the main if block in the
    edit_startup_item_arguments_list function to
    more easily show the code for each menu choice.
    The block for adding an argument has a TODO
    comment line and still needs to be actually
    filled.

commit ee33d86700ab4dd671460d687ef42b10a773a61c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Feb 28 23:36:17 2024 -0500

    Created a copy of the save_fn_test text file and
    renamed the copy save_fn_test--item2
    
    This will allow for the save_fn_test file to be
    overwritten with future testing.

commit b10591c078cedb8bda06ff73f674f8a8118fc570
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Feb 28 23:34:40 2024 -0500

    Renamed test_data.json to startup_data.json and updated demord.py accordingly

commit 294d63f323b4930c9a1140fbad3f38722e03d9f8
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Feb 28 20:56:54 2024 -0500

    Tested functionality to edit startup item
    arguments and to save the changes
    
    Reverted the changes in the previous commit so
    the function edit_startup_arguments_list in the
    module startup_edit worked. Previous changes were
    to skip this function when in testing environment.
    
    Also tested the function by using item 2 from the
    default startup data, which is to open Chrome
    to Google. Added an argument, edited an existing
    argument, and deleted an argument.
    
    Finally, tested the save functionality mostly to
    remind myself of the state of that functionality.
    Forgot that the save function saves to a text file
    in the testing folder the following, in order:
    
    1. The original JSON data
    2. The original startup item
    3. The modified startup item
    4. The new JSON data
    
    The last part is done through the function
    generate_user_edited_data in the module
    data_generate.
    
    Will need to go through the code to familiarize
    myself with it. Will also need to test using
    item 1 as outlined in issue #15

commit e76882322bcac766ba4ab1298a92d48d83d921e3
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Feb 28 01:45:37 2024 -0500

    Redid code changes made in a previous commit to
    skip the edit_startup_arguments_list function in
    the module startup_edit
    
    The following code was added to the beginning of
    the edit_startup_arguments_list function to skip
    the whole function is in testing environment:
    
    if not app_demord.is_production():
        print("Testing environment found: Skipping menu choice for shortcut")
        return testing_shortcut_arguments_list(arg_list.copy(), True)
    
    The code was then commented out in a later commit.
    The code is now uncommented so this function is
    skipped for now.

commit 7d517185a393cf4c20e5975d6125b2f75dcb2f85
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Feb 28 01:39:54 2024 -0500

    Changed creation of startup file process to always
    use default data
    
    Updated the generate_json_data function in module
    data_generate. Now, when the user choose to create
    a new startup file and chooses user-provided
    values, the code checks the is_production function
    in the main demord module.
    
    If in testing environment, a message is printed
    that the functionality isn't implemented and the
    default startup data is being used. A call is then
    made to the generate_default_startup_data function.
    
    If not in testing environment, then the
    generate_user_startup_data function is called like
    normal.

commit 939a8710feab98648686b691a0a5935110b2b745
Author: David <hiranwatson@gmail.com>
Date:   Wed Feb 14 18:53:31 2024 -0500

    Minor changes to startup_edit
    
    Removed the import of demord and some other minor
    changes.

commit acfbd85ec6652b2a1bc82d2c50827804fb918f75
Author: David <hiranwatson@gmail.com>
Date:   Wed Feb 14 18:51:24 2024 -0500

    Updated calls to JSON functions from demord to
    jsonf
    
    Added import statement to import jsonf file and
    updated any calls to the JSON functions from using
    demord to using jsonf.

commit e1d51ef7a55b5995145c8ca89149e2d90a15ce97
Author: David <hiranwatson@gmail.com>
Date:   Tue Feb 13 15:11:50 2024 -0500

    Made changes to the import.py file
    
    Updated the file to include the import statement
    for jsonfn.py. Also made the import.py file into a
    text file but kept it in the dependencies folder.

commit 4acceb9055cef4b94c3fed70f0c311ad584ca872
Author: David <hiranwatson@gmail.com>
Date:   Tue Feb 13 10:46:59 2024 -0500

    Refactored all the JSON related functions to a
    separate file
    
    Created a new file in the dependencies module
    called jsonfn.py and added all the JSON functions
    to it:
    
    - json_reader
    - json_writer
    - json_creator
    - json_editor
    
    Updated demord.py for the references.

commit 62f5c38701b4a22785dc2b61d8bfe28a648de804
Author: David <hiranwatson@gmail.com>
Date:   Tue Feb 13 10:35:04 2024 -0500

    Minor comment changes in chooser.py
    
    Updated some comments and the docstring in the
    function new_file_chooser. Also updated the
    docstring in the function user_menu_chooser.

commit d39e462bcaf1cacf4096859ee2875790152f41c7
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 30 12:50:12 2023 -0500

    Committing some changes that I'm in the middle of working on so I can work on them at home

commit 6f61b0fb36a1181c6511a12d7d13320d8f405b98
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 18:12:22 2023 -0500

    Fixing small mistake from previous commit
    
    In previous commit, accidentally moved the call to
    the function generate_user_edited_data into the
    if block checking for a test environment. It's now
    been moved out of the if block so it will always
    run.

commit 1cfad3fb6360bea3489ac5ec6c0603398f4ee874
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 18:06:51 2023 -0500

    Minor refactor to function save_startup_item
    
    Moved all the testing related statements to within
    an if statement that uses the function
    is_production in the module demord to first check
    if working in a testing environment.

commit a2656bd141bec330a1d8876f98b64608e73936d9
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 18:05:22 2023 -0500

    Adding save_fn_test.txt file to repo commit.

commit 5baebbbf09a4e585525ee6dd3414895bed72195e
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 18:01:19 2023 -0500

    Minor refactoring of the function
    edit_startup_item
    
    In the menu presented for edit_startup_item, made
    two changes so that instead of "View startup data"
    and "Save startup data to disk", the choices now
    read "View startup item" and "Save startup item
    data to disk".
    
    Also, updated case 6 for the match-case block,
    to now print out the return message of the call to
    the function save_startup_item when the status is
    False.

commit 3569c06cfb494ed68ca5569c57714e2292530111
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 17:55:24 2023 -0500

    Refactored several testing related print
    statements
    
    In functions match_scenario and save_startup_item,
    refactored the code that printed out stuff for
    testing purposes.
    
    In match_scenario, the dictionary parameter passed
    in, data_validation_ is printed out only if we are
    in a testing environment. The function
    is_production in the module demord is used for
    this.
    
    In save_startup_item, all the different print
    statements were recoded to append to a string
    which is then saved to a file called
    save_fn_test.txt in the testing folder. This makes
    it easier to compare and confirm that the code is
    working.
    
    The save code works except it doesn't currently
    actually write anything to disk. Additionally,
    while any changes made to the single startup item
    being worked on persists, once the flow goes up
    one menu level to select another startup item,
    the changes made are lost. This should in theory
    be ok as long as the save function is modified to
    actually properly save data to disk.

commit 84bfd77424ee2745b3530e5f61750109ba48b7bc
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 29 17:53:43 2023 -0500

    Added in code for scenario 1 in the function generate_user_edited_data

commit c1042e13e25becda8630bcdf86bc1a9515efb794
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 28 18:54:10 2023 -0500

    Added print statement to edit_startup_item_arguments_list to specify when the function testing_shortcut_arguments_list is called

commit b9c21c4ed5dc114352bed49aeb4b209eed6b7351
Author: David <hiranwatson@gmail.com>
Date:   Mon Nov 27 16:40:41 2023 -0500

    Refactored the if block in the function
    generate_user_edited_data
    
    Realized that checking for the scenario where
    validation fails wasn't necessary since an empty
    Python dictionary is returned, and an empty Python
    dictionary is created just before the if-block.
    
    Adjusted scenario 2 to not return the variable
    modified_json_data but to make a copy of it and
    assign that to the new_json_data variable. This
    way, there's only the one return statement at the
    end.
    
    Also, readjusted the if-block so it checks for
    scenario 1 first, then scenario 2, then scenario 3
    since that's more readable.

commit 2cba473ff2b11268f14f545e3ae3a523a2401ac7
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 24 18:28:32 2023 -0500

    Minor change to waiting for user input
    
    In modules demord and startup_edit, there are 2
    places where, after startup data is printed to
    the screen, the program halts and waits for user
    input to continue. There's also 1 place where the
    prompt happens before the startup data is printed
    out.
    
    The prompts all used to start with
    "Press any key", but it's only the enter key that
    continues. Changed the prompts to start with
    "Press the enter key when ready".

commit c43dd26b08d2b255f789be97fc0e69067d24e8eb
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 18:15:08 2023 -0500

    Added elif block in function
    generate_user_edited_data for scenario 1
    
    Still need to code in the block so for now it just
    passes.

commit 02e65651509b34683909aa8040088342dedaa684
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 18:09:30 2023 -0500

    Major update to function generate_user_edited_data
    in module data_generate
    
    Added the functionality to handle scenarios 2 and
    3 for generating JSON data that the user has made
    changes to. As a reminder, the 3 scenarios listed
    in the docstring of the function
    data_validation_scenario are:
    
    1. Need to update a single, existing startup item
    2. Need to update the full JSON data
    3. Need to add a single startup item
    
    The function now handles when the data isn't valid
    by returning an empty Python dictionary, and 2 of
    the 3 scenarios. Only scenario 1 has to be coded
    in.

commit 80db2f9da81aaf2b3268fde4535d7432d8ae694e
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 16:50:35 2023 -0500

    Renamed the function startup_data_validator in the
    module helper to json_data_validator
    
    Also updated all calls to this function in the
    module data_generate.

commit d028ebca6e13f1faf3d3be9b3f82b5c41af9f47b
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 16:11:37 2023 -0500

    Used the changes made in commit c9e14d7 to fix an
    issue in validating the JSON data during the
    process to save a startup item
    
    While testing the functions
    data_validation_scenario and match_scenario in the
    module data_generate, the print statements
    modified and added in commit c9e14d7 revealed that
    the validation was failing when it shouldn't.
    
    Using the same print statements along with running
    the Python debugger in VS Code, I realized that in
    the module helper, in the function
    startup_data_validator, the file path being used
    wasn't complete because I assumed incorrectly what
    the current working directory is. That is now
    fixed.

commit c9e14d725fd8f588f1592f50c320c4c60dd4945a
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 16:08:44 2023 -0500

    Refactored print statements for saving a startup
    item
    
    Changed the print statements used for debugging,
    such as checking the value of a variable, for
    the function save_startup_item and all the
    other functions it calls during the process.
    
    Moved some print statements from the place in
    the function edit_startup_item where
    save_startup_item is called to other helper
    functions. Also added some print statements.

commit 1d5f912678fcc4cdca76656687e38dd68191a9fa
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 14:26:44 2023 -0500

    Refactored data_generate to fix the issue
    mentioned in commit ef70fca
    
    In commit ef70fca, a TODO comment was added to
    the module data_generate for lines 183-207. This
    was because in the function
    data_validation_scenario, a KeyError was being
    thrown due to the variable data_validation.
    
    The issue was that the variable is a dictionary
    but all the code utilising the variable was using
    list referencing. This has now been fixed. The
    keys in the dictionary were renamed and all
    references to the dictionary for the functions
    data_validation_scenario and match_scenario were
    updated, including the match-case block in
    match_scenario.

commit 2bd289c095c86b42c96d97662e5c83f3a0e39b63
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 14:22:26 2023 -0500

    Minor change to the printout when the save_startup_item function is called

commit 1aaec2ed14a2ebe643bd41b2d606e17a60a18932
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 14:12:12 2023 -0500

    Made changes so the new helper function
    testing_shortcut_arguments_list works
    
    Had to update the call to
    testing_shortcut_arguments_list because in the
    module demord, the is_prod variable cannot be
    accessed since it's a local variable created in
    the starting if block.
    
    Made is_prod a global variable in demord and
    added a helper function called is_production
    which returns the global variable. This way, the
    environment being used can be checked anytime.

commit b378738c783e564ecc41421042ef7ba970151cc9
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 13:41:43 2023 -0500

    Created new helper function to aid with testing
    
    In module startup_edit, created a helper function
    called testing_shortcut_arguments_list. This lets
    us the actual user menu and process when trying to
    edit a startup argument.
    
    Currently, the function
    edit_startup_item_arguments_list checks to see if
    in the module demord, the variable is_prod is
    False. If so, the new helper function is called
    and the rest of the
    edit_startup_item_arguments_list function is
    bypassed.
    
    The new function takes the arguments list passed
    in to the calling function and a boolean. A
    boolean value of True means the helper function
    will add an argument. A value of False means an
    argument will be deleted.
    
    This will specifically help with testing the save
    functionality.

commit 7be9384d80de771eddf1f628abed18b25f390ea8
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 23 13:13:21 2023 -0500

    Minor change to item deletion menu in function edit_startup_item_arguments_list for module startup_edit

commit ef70fca89c74c32f5ec6559facd4039926459bda
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 21 19:00:48 2023 -0500

    Wrote up todo for lines 183-207 in data_generate for troubleshooting steps

commit d0e01f5d6398290f57ad79fdcbaf6e03b07d2077
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 10 19:00:39 2023 -0500

    Minor change to startup_add
    
    Added a minor change to the startup_add module
    function save_startup_item to print out the
    returned dictionary from the call to the function
    generate_user_edited_data.

commit 8393a39fe244105abd1e74b44273ed8a67ea976a
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 10 18:56:33 2023 -0500

    Rewrote all local import statements
    
    Due to issues with circular imports and import
    statements order, made imports.py just a file
    to store all local import statements in the form
    of:
    
    import module as name
    
    Changed the local import statements for the
    modules demord, data_generate, helper,
    startup_add, and startup_edit to use the full
    import statements for only the local modules used.

commit 8f01f152703c7fca0dfc43113b84b67c546e02fc
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 10 18:37:23 2023 -0500

    Refactored the function data_validation_scenario
    
    Rewrote the nested if-statements performing the
    actual data validation into a match-case block.
    Moved that match-case block to a new helper
    function called match_scenario for easier code
    reading, testing and maintaining.
    
    The new function just takes the dictionary
    data_validation and returns both an integer
    representing the scenario number as well as an
    error message if there is one. The function
    data_validation_scenario still prints out the
    actual error message.
    
    For the match-case block, used the dictionary for
    matching and matched based on the keys and their
    possible boolean values. When 2 or 3 cases
    resulted in the same error message, they were
    merged into one case statement using the |
    operator.

commit 639d506900e4aa3d92ae35dc7aefb80d04cc91d2
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 10 16:29:42 2023 -0500

    Major code changes to the function
    generate_user_edited_data
    
    Put all the code related to validating the
    parameter data into a helper function called
    data_validation_scenario. The function takes in
    the same parameters from generate_user_edited_data
    and handles all the code for validating each of
    the parameters.
    
    If anyone of them don't validate properly, the
    helper function will print out the error message.
    An integer variable called scenario_number is
    returned with either 0 for any invalid data or
    1-3 depending on which scenario is applicable.
    
    If scenario 0 is returned,
    generate_user_edited_data returns a blank
    dictionary like before.

commit 468412ce97886973fa467a0cb66094e1be7de847
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 10 14:41:56 2023 -0500

    Refactored generate_user_edited_data for proper
    data validation
    
    Using the helper module function
    startup_data_validator, refactored the code to
    validate parameter data and check for the 3
    possible scenarios listed in the docstring.
    
    Currently, multiple nested if-statements are used
    to accomplish this with the necessary error
    messages printing to the screen depending on when
    data validation fails.
    
    Need to clean that up and make the code more
    efficient as much as possible.

commit 7dedf3f799ba574cbeaee37499af458a05b5f6b8
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 9 14:50:19 2023 -0500

    Refactored function startup_data_validator to
    validate for both a single startup item or full
    startup data
    
    The function now takes a boolean that specifies
    whether the passed in JSON data is a single
    startup item or full startup data. The variable is
    optional and False by default.
    
    Based on that variable, either
    startup_data.schema.json is used or
    startup_item.schema.json is used. See previous
    commit, 81c8d31, for more information.

commit 81c8d31ab020a3123d53f204f2a9b279dc4e3fdb
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 9 11:01:51 2023 -0500

    Created new schema file for a single startup item
    
    In the branch /config folder, created a new file,
    startup_item.schema.json, to specify the schema
    for a single startup item. Also updated the title
    and description for the main schema,
    startup_data.schema.json to reflect the changes
    to the program name.

commit 9085251fc715c013e7785391b335256f2e0bfc78
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 9 10:49:18 2023 -0500

    Forgot to include in previous commit the JSON
    schema
    
    Copied startup_data.schema.json from the project
    /data/json_data folder to the branch /config
    folder. This is what the startup_data_validator
    function accesses.

commit b75261f23e82f222a6caacd38d123fa191fe6302
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 8 18:05:49 2023 -0500

    Added a schema validator to module helper
    
    Created a new function startup_data_validator. It
    takes a dictionary called json_data and uses the
    package jsonschema to validate against
    startup_data.schema.json. If the JSON data doesn't
    validate, an error is printed and the function
    returns False. If the data validates, meaning the
    passed in dictionary is properly formed startup
    JSON data according to the schema, then True is
    returned.

commit f5c392c1894ec8b35333a50ea437575b2045beb5
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 8 16:06:29 2023 -0500

    Added TODO item for function
    generate_user_edited_data
    
    Added TODO to docstring as a reminder to use the
    jsonschema package to help with parameter data
    validation.

commit e9868d3dd9abe6280bc4bdd7f225292807102cf8
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 8 16:01:32 2023 -0500

    Major update to generate_user_edited_data
    
    Refactored the function generate_user_edited_data
    to properly validate all incoming parameters.
    Updated the docstring to list the 3 different
    scenarios to check for and coded that in.
    
    Might need to utilise the jsonschema package in
    PyPi to properly validate the variable
    orig_json_data when it's supposed to contain full
    JSON startup data.
    
    For now, leaving the function as is.

commit 495b841b4eee02948d66aa2786cd395a06616bf4
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 18:47:58 2023 -0500

    Fixed some code in function
    generate_user_edited_data
    
    Changed the error message printed when item_add is
    False and the original JSON data dictionary is
    blank. Had accidentally copied the same error
    message as the other scenario so had to get the
    initial message from commit 6ced24f from the
    change log.
    
    Also updated the if statement for the other
    scenario, checking to see if the modified JSON
    data is valid. Had to add in an or condition.

commit 6ced24fe2323a901267b7b162bf148eb88ebb342
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 18:39:05 2023 -0500

    Major changed to the function
    generate_user_edited_data
    
    Updated the function to validate the data passed
    in by checking that the modified JSON data has
    all 7 keys that a startup item should contain, and
    that if the item is to be added, that the original
    JSON data has been passed in.
    
    If either of these fails, an error message is
    printed out and a blank dictionary returned.

commit 8e839d35766946ba420f5c9bcee10413c88d6c4e
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 17:34:50 2023 -0500

    Minor correction to the function call for generate_user_edited_data from the function save_startup_item

commit 3e0d4a8ef0eeab49e0633f4056ea02fe099751e7
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 17:30:23 2023 -0500

    Minor correction to the function call for generate_user_edited_data from the function save_startup_item.

commit ed78e6f913c3ede95b1ac12e13482bd65e83b1da
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 17:06:00 2023 -0500

    Updated the module data_generate
    
    In the function generate_user_edited_data,
    refactored the function definition to take the
    item_add boolean variable second and make it
    required.

commit cdf7196dfe4adbdd755aa780efb2cc204b737729
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 17:02:45 2023 -0500

    Created new prettify error function in module
    pretty
    
    Created new function called prettify_custom_error
    that takes in a string message and a string with a
    function name. The following is then printed:
    
    ***ERROR***
    The following error was encountered:
    
    Function: <function_name>
    Message: <string_message>
    
    This function can be used at any point in the
    program to provide error data that a user can
    provide if they encounter the specific error.

commit db6b8c20d4c6c1044b6aefe6781ff28c5fb77808
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 16:14:47 2023 -0500

    Started working on function save_startup_item
    
    In module data_generate, refactored the function
    generate_user_edited_data to take 2 dictionaries
    and a boolean instead of **kwargs:
    
    modified_json_data
    orig_json_data
    item_add
    
    The last variable will specify whether the
    modified data is meant to be added to the original
    or not. The variable orig_json_data is optional
    and is blank by default but if being used, it
    should contain the full startup JSON data. The
    variable modified_json_data can contain just one
    startup item, several startup items, or full JSON
    data.
    
    Also updated the function save_startup_item to
    call the generate_user_edited_data function.

commit 30c2408b9b9de5f5727a3dcae5ba7685511a0859
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 16:00:28 2023 -0500

    Updated pretty module
    
    Changed the name of the function prettify_error to
    prettify_io_error and updated all references to it
    in demord module. Will create another prettify
    function for generic errors that will accept a
    customer error message.

commit afad63dfd88fd2744d7133395c448da75d23a413
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 12:07:34 2023 -0500

    Updated module startup_edit
    
    In the function edit_startup_item, updated the
    case for saving a startup item to now print out
    the return message.

commit fe1a89a763aff74725f8f4be8f4b4651cf875670
Author: David <hiranwatson@gmail.com>
Date:   Tue Nov 7 12:05:15 2023 -0500

    Updated module startup_add
    
    Had to add an import statement to import the
    module demord specifically due to the order of the
    import statements in the module imports.
    
    In testing the save_startup_item function,
    realized the if-block testing for a changed
    startup item was testing for != instead of ==.
    Changed that and tested it worked.

commit 3b41cca6046cc8660c8554ffe0c0f7aa9a6b6599
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 3 19:01:49 2023 -0400

    Small imports change and code refactoring
    
    Forgot to mention in previous commit that in the
    module data_generate, due to the change in the
    import statements structure, made the variables
    ec_jsk and ec_jss global variables ENUM_JSK and
    ENUM_JSS and assigned them to the respective
    enum classes in the enum module. Also, updated all
    the references to those variables.
    
    However, when I ran the program, there was an
    import error due to the order of the import
    statements. Specifically:
    
    Demord module imports Imports module
    Imports module imports Data_generate module
    Data_generate module imports Imports module
    Data_generate module references Enum module
    Imports module imports Enum module
    
    Fixed this reference error by making the imports
    module load the enum module first.

commit 4432eb4868d75e24b71609dd72c703f8372d9cf9
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 3 18:33:35 2023 -0400

    Moved the default JSON data to a JSON file
    
    Created a config folder and copied the default
    JSON data from the DEFAULT_JSON variable to a
    file called default_startup.json. The plan is to
    use this file instead of a variable and read from
    the file when needed. This will make it easier to
    maintain what's used as the default JSON data.

commit c663f18d0ba9c130bfb97a28ecd23f0ab2ea1a91
Author: David <hiranwatson@gmail.com>
Date:   Fri Nov 3 18:29:00 2023 -0400

    Refactored all the local import statements
    
    Created an imports.py module that does all the
    local imports. Specifically, it imports demord.py
    and all the modules in dependencies as specific
    variables:
    
    deps_helper
    deps_chooser
    deps_pretty
    deps_data_gen
    deps_item_add
    deps_item_edit
    deps_enum
    app_demord
    
    Updated the modules demord, data_generate,
    startup_edit, and startup_add to now just import
    everything from the imports module. Also updated
    all function references to use the appropriate
    variables, such as deps_chooser.new_file_chooser.

commit 4f0dc5ed4fce81272f8b3675231a2e802c4b2e3d
Author: David <hiranwatson@gmail.com>
Date:   Thu Nov 2 18:41:56 2023 -0400

    Added menu option during new file creation to
    return to main menu
    
    The menu for choosing to create a new startup file
    with default values or user-provided ones didn't
    allow to return to the main menu, so added that
    option in. Changed the function new_file_chooser
    in chooser.py to now return 2 boolean variables as
    a tuple. Updated the main loop of demord.py to
    account for this and only move forward if the user
    chooses to create a new file.

commit c09c3700a32bc9a92e1581c65aed4f86f5058ddf
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Nov 2 00:20:25 2023 -0400

    Fixed issue #9
    
    Instead of adjusting the import statements in
    demord.py, I adjusted them in startup_edit.py.
    Now, all of startup_add.py is imported using a
    regular import ... as ... statement. The module is
    imported as a variable called dsa. Updated the
    reference calls to the functions in startup_add.py
    to use this variable. Tested that it worked.

commit 5b746978ce3094c60dcbbac0c7d25ab39c78742e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Nov 2 00:16:58 2023 -0400

    Edited the json_path list
    
    While running the program, encountered a read
    error because the json_path list contained the
    "dependencies" folder which it didn't need to.
    Removed it so now reading the JSON file works
    again.

commit d2c1447a2ec8dbb97c24cefa5e10ec25220ac0a3
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 18:55:21 2023 -0400

    Updated function name add_startup_item_arguments to add_startup_item_arguments_list in startup_edit.py

commit 5316c15e8a965060245e5b5cf3fca537fbeae8a9
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 18:19:36 2023 -0400

    Updated import statements
    
    Updated the import statements in data_generate.py
    and startup_edit.py to use package.module, such as
    dependencies.helper.
    
    Realized this change was need when trying to run
    the program. It still fails because startup_add.py
    imports the function json_reader from demord.py
    but that is one level up from dependencies. I'm
    not sure how to reference one level up. After
    trying things I found online, nothing worked.

commit c949b0c768a5af5f84f3bac791e89924771f5196
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:54:02 2023 -0400

    Minor change to startup_add.py
    
    Forgot to add an import statement for a reference
    call to the function json_reader in demord.py.

commit bc16ac54d5ee6c9e7f998bc112dc6f16ce5e043d
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:53:07 2023 -0400

    Continued working on issue #7
    
    Updated startup_add.py with the following
    functions:
    
    save_startup_item
    add_startup_item_arguments_list
    (renamed from add_startup_item_arguments)
    
    Updated the various import statements to reflect
    changes made.

commit 59c4d847129b955ad1320ece45d8e9ddbaad130b
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:50:21 2023 -0400

    Continued working on issue #7
    
    Updated startup_add.py with the following
    functions:
    
    save_startup_item
    add_startup_item_arguments_list
    (renamed from add_startup_item_arguments)
    
    Updated the various import statements to reflect
    changes made.

commit 107d77e6077a0847ec7a906d3e9ef0400d493087
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:47:56 2023 -0400

    Continued working on issue #7
    
    Updated startup_edit.py with the following
    functions:
    
    edit_startup_item
    edit_startup_item_name
    edit_startup_item_description
    edit_startup_item_program_path
    edit_startup_item_arguments_list
    
    Updated the various import statements to reflect
    changes made. See next commit for the last of the
    changes.

commit 92ffd06ee51d9670e2c370f99409c25b23de0117
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:42:12 2023 -0400

    Continued working on issue #7
    
    Updated data_generate.py with the following
    functions:
    
    generate_json_data
    generate_user_edited_data
    generate_default_startup_data
    generate_user_startup_data
    
    Updated the various import statements to reflect
    changes made. See next several commits for the
    rest of the changes.

commit 5639c27814b1adca9fd9a8c74379d539cbc76e56
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:41:17 2023 -0400

    Continued working on issue #7
    
    Updated pretty.py with the following functions:
    
    prettify_json
    prettify_startup_item
    prettify_error
    
    Updated the various import statements to reflect
    changes made. See next several commits for the
    rest of the changes.

commit f081e657beb9ccc1a0675b2c75139e95330126c0
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:39:54 2023 -0400

    Continued working on issue #7
    
    Updated chooser.py with the following functions:
    
    user_menu_chooser
    new_file_chooser
    edit_file_chooser
    
    Updated the various import statements to reflect
    changes made. See next several commits for the
    rest of the changes.

commit 7705c0fb780512303b8dfaa608f8d7eeabaae8b0
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 17:07:59 2023 -0400

    Continued working on issue #7
    
    Updated helper.py with the following functions:
    
    set_start_dir
    program_info
    parse_full_path
    check_overwrite
    
    Also added the global variable DEFAULT_JSON to
    this file instead of demord.py. This way, any
    other files that need to reference it only have to
    import helper and not demord.
    
    Updated the various import statements to reflect
    changes made. See next several commits for the
    rest of the changes.

commit a242612ed62093d151d5db9659ceea74b6d6d258
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:58:44 2023 -0400

    Continued working on issue #7
    
    Updated demord.py to only have the functions:
    
    json_reader
    json_writer
    json_creator
    json_editor
    
    Also kept the main loop. Updated the various
    import statements to reflect changes made. See
    next several commits for the rest of the changes.

commit 96b391bcc5bbd0ea101e0aa188818dab4401cfe2
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:21:23 2023 -0400

    Worked on issue #7
    
    Created 6 new Python files in the dependencies
    folder:
    
    helper.py
    chooser.py
    pretty.py
    data_generate.py
    startup_add.py
    startup_edit.py
    
    Added first-line comments to each file describing
    the purpose of each file.

commit 4cdbf2672eb97bb9d274363b38ed50fda903fe11
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:09:25 2023 -0400

    Minor changes to the first-line comment for dependencies/enum.py

commit fcf23a763cb485827e73ea3ae8aa3c89efe8d944
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:08:57 2023 -0400

    Minor changes to the first-line comments for demord.py and dependencies/__init__.py

commit 865aa9760439ed326fa76541d8e751c9d05bb3cf
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:05:33 2023 -0400

    Updated comments in dependencies module __init__.py file

commit 8eab0f99ac09caa4799bcc533688c2f662a266ee
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 16:00:31 2023 -0400

    Formatting changes by black formatter

commit 194b8c0369f7ffadf940d2402cd0baf30dc1c298
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 15:57:48 2023 -0400

    Forgot to update reference call in edit_startup_item_arguments for change in previous commit

commit 73fe7901925763c7076ea83b370f67a6a8381d31
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 15:55:49 2023 -0400

    Renamed the function add_startup_arguments to
    add_startup_item_arguments to keep consistent
    naming.

commit 2b3b7ef92cfb2fdcba682082066abcd0330aa31b
Author: David <hiranwatson@gmail.com>
Date:   Wed Nov 1 13:24:40 2023 -0400

    Finished issue #8
    
    Renamed startup_data_editor.py to demord.py.
    Closed off issue #8.

commit 9f589350723d31fe569d936e51ef45d758a5bf43
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 30 18:59:39 2023 -0400

    Renamed enum_classes.py to enum.py
    
    Decided to make changes to the naming system being
    used to line up with PEP-8. While enum_classes as
    a name doesn't go against PEP-8, enum is a shorter
    name. Updated references in startup_data_editor.py
    to reflect name change.

commit da9ea79402089a43cc525f874490bae036df4722
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 30 13:26:31 2023 -0400

    Updated startup_data_editor.py for the folder
    name changes made in previous commit

commit 2e8dcd7883ed52e011e9b9a1038dacd257e580ef
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 30 13:17:27 2023 -0400

    Removed extra comments from
    dependencies/__init__.py file

commit 12663740eab1e893c7ba7c20c4f157e2905029b5
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 30 13:14:53 2023 -0400

    Rearranged folder structure to have better naming

commit 9c54f049b203df8c5c1e58ba12aef754683128a6
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 30 10:51:56 2023 -0400

    Stared working on function save_startup_item
    
    Changed the parameter startup_item to
    modified_startup_item. For now, added code to
    grab the same startup item number from the JSON
    data in general and print them out. Also added an
    if statement to compare if there's a change and,
    if not, return saying nothing was saved, but it
    doesn't seem to work. Need to troubleshoot.

commit 957bec9e5eb01f785e959b017ffc502310f29b9c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 23:23:32 2023 -0400

    Modified case 6 in the function edit_startup_item
    
    Updated the call to the function save_startup_item
    so it passed in the 3 required parameters instead
    of the just the startup item dictionary.
    
    Also added some print statements to show if the
    json_reader function call in save_startup_item was
    successful or not and to say that the save
    functionality is still in progress and no data was
    actually saved.

commit 6a1f385e00f1f34c6e9843ba9f9343bbb47fec9b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 23:22:12 2023 -0400

    Made changes to the function save_startup_item
    
    Removed the print statement to print out the
    startup item at the beginning of the function.
    Also, modified the return statement to return the
    two return variables from json_reader.

commit 7ccf681f0c271507b66d803a27f9120f934071cb
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 23:03:06 2023 -0400

    Started creating the helper function
    save_startup_item
    
    Started the helper function to save a startup
    item. As mentioned in commit 6a5bb8b, the
    function takes in 3 parameters and returns 2
    variables.
    
    Added the docstring for the function, but
    currently, it only prints out the startup_item
    dictionary and returns a hardcoded tuple with
    False and "This functionality is under
    construction...come back later...". However,
    the caller function, edit_startup_item, doesn't
    do anything with this except store it in two
    variables.
    
    Also, I mentioned in the previous commit, 6a5bb8b,
    that the signature of edit_startup_item was
    changed. Unfortunately, due to how I staged and
    then committed the changes, namely, breaking them
    up over two different commits, the actual changed
    signature is part of this commit.

commit 6a5bb8bf18ca222066cefacfebe9ab612dfe6d79
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 22:57:41 2023 -0400

    Made two more changes to the function
    edit_startup_item
    
    Added an input statement after the startup item
    data is printed out, so it doesn't scroll off
    screen. The statement says to press any key to
    continue, which lets the user read the startup
    item data in full before being presented with the
    next menu.
    
    Also, filled in case 6 in the edit_startup_item
    menu for the match-block to call a new helper
    function called save_startup_item. Decided the
    helper function signature will be similar to the
    functions json_reader or json_writer. This new
    function will take in 3 parameters - a dictionary
    of the startup item JSON data, a list representing
    the path to the startup_data.json file, and a
    string with the name of the startup_data.json
    file. In addition, this function will return two
    variables - a boolean for the status of the save
    attempt and a string message of any error.

commit 6e7e0716903923f3f09ba1ec63f915f583c4ed87
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 22:52:48 2023 -0400

    modified the function signature for
    edit_startup_item
    
    While planning out how to save the changed startup
    item data, realized the helper function to save
    the data will have to call the function
    json_reader which takes in a dictionary and a
    string to determine the full path of the
    startup_data.json file.
    
    After playing around with global variables, I
    decided it would be easier to pass in the
    variables as parameters since the function
    json_editor, which calls edit_startup_item, takes
    in those two variables as parameters.
    
    So now, edit_startup_item takes in three
    parameters: the startup item data as a dictionary,
    the path to the JSON file as a list, and the name
    of the JSON file as a string. Also adjusted the
    call to edit_startup_item from json_editor to pass
    in all 3 parameters.

commit e2519cbdf3714f33260c4cc0fc673334ff7f50df
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 22:50:47 2023 -0400

    Made changes to case 3 in the main loop
    
    Modified the code so then first input asking the
    user to press any key to view the startup data is
    inside the if-block. This way, that input is
    skipped is the JSON data wasn't read in
    successfully.

commit 94abb078d0e4f05334b07fe95ab1c9d3ef04c895
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Oct 29 15:26:53 2023 -0400

    Renamed the helper functions starting with
    edit_startup to use edit_startup_item as a prefix
    
    Renamed the following helper functions:
    
    edit_startup_name ->
    edit_startup_item_name
    
    edit_startup_description ->
    edit_startup_item_description
    
    edit_startup_path ->
    edit_startup_item_program_path
    
    edit_startup_arguments ->
    edit_startup_item_arguments_list
    
    Updated all references to those functions.

commit c2e147c8fa701614e8056f00a3444db2453ebde1
Merge: 920c7d3 618c992
Author: David <hiranwatson@gmail.com>
Date:   Fri Oct 27 17:11:42 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit 618c9927455f987a3f4e390d4bfc502d966aa609
Author: David <hiranwatson@gmail.com>
Date:   Fri Oct 27 17:06:09 2023 -0400

    Update README.md
    
    Expanded the Purpose section to explain what the program does, how it works, what is can currently do, and what is currently being worked on.

commit 920c7d3f2071ef90866fe415bcc88a9ef05bf69b
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 26 19:02:38 2023 -0400

    Started work on the function program_info to explain what Demord is and how it works

commit 1b5a0ec203192d965f4ed2595668bc717f04dc7e
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 25 18:48:34 2023 -0400

    Moved test.py and unittest_data.json to a new folder called testing

commit bdc2dbf553e68e20f63638b4a8840d92d7286114
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 25 16:35:25 2023 -0400

    Update README.md
    
    Updated files list to be current

commit b8a74789f1ab55523e8ac425f6af30d7f0138193
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Oct 25 01:08:32 2023 -0400

    Formatting changes
    
    Set VS Code to use the Black Formatter with a
    line-length of 80. This caused multiple lines to
    split up. Manually split some others to stay
    within the current VS Code ruler length of 87.
    Tested that all the split strings still print
    properly as one string.

commit 290b93c19c017fe69101426f20f1db14822aec26
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 24 18:53:39 2023 -0400

    Made more changes to the menu logic
    
    Extrapolated the starting line of every menu:
    
    Please choose one of the following:
    
    Added that to the function user_menu_chooser so
    the function adds that "header" and the "footer"
    with the option to quit the program. Adjusted all
    menus to not have that line and tested it works.

commit 3544a599e10a016efb5927c2a6426224199e060a
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 24 18:43:16 2023 -0400

    Minor changes to how the welcome message displays
    
    Changed things so the welcome message only shows
    the first time when the program is run instead of
    every time the main menu is displayed.

commit 81b3d617e9406ce11bb092b3666115d106a295d5
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 24 18:35:11 2023 -0400

    Created new function to explain the program and a
    welcome message
    
    Added a welcome message to the main menu with a
    little tag line. Also, added a new option to the
    main menu to explain the program and created a
    function to do that. Updated the main menu
    match-case statement. The function is called
    explain_demord and currently just prints out:
    
    Currently under construction...come back later...

commit d067e28830e15a66c4cd34865168b67afbfa222e
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 24 18:24:16 2023 -0400

    Allowed ability to quit the program from any menu
    
    Modified the function user_menu_chooser to add a
    quit option to the menu passed in. Sys.exit is
    used if the user chooses that option.
    
    Also modified the main loop so there are only 3
    options since quit is now handled elsewhere.
    
    Tested the functionality from a few different
    menus and it works.

commit 4ffa43d23cde253ba776c9b371bce8fd8bcefb54
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 24 13:19:25 2023 -0400

    Minor changes to the function
    edit_startup_arguments
    
    Updated the printout for argument deletion and
    added a printout for argument addition.

commit 8623d01e331a3c609b3100e8cdc6ed7a1460cc86
Merge: acda41f 4629f18
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 23 23:50:57 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit 4629f1825ea574361749c99dc1886a604c158ad1
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 23 23:50:35 2023 -0400

    Changed one reference to CompStart in main README.md to Demord

commit acda41ffc7d9b1f50a41f43ae53719e8a751c313
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 18:48:08 2023 -0400

    Modified function edit_startup_item
    
    Added a return line at the end to return the
    dictionary startup_item

commit f36e4f6d918fbccc04245f6fd9c8807d83026341
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 18:33:43 2023 -0400

    Removed one reference to old boolean variable create_menu

commit 0bd8673dd981986f06befaf44c1fddef59784617
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 18:26:21 2023 -0400

    Finished coding ability to delete a startup
    argument
    
    Along the way, moved the code to create the edit
    startup item menu into the while loop. Changed the
    code to use the variable new_args_list instead of
    args_list because it's new_args_list that is
    updated when adding or deleting an argument. Also,
    updated the code to recalculate the variable
    args_count after a deletion or addition by getting
    the length of new_args_list.

commit 5af8e1d0d881bea07e966a0d9c1ec2039cda3642
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 17:49:13 2023 -0400

    Made changes to edit_startup_arguments and started
    creating option to delete an argument
    
    Removed the boolean variable create_menu so now
    the menu is generated on every iteration of the
    while loop. Moved up the code for argument
    deletion, argument addition, and argument editing
    to be elif blocks in the main if statement in the
    while loop. Started coding in the argument
    deletion logic. Currently, a menu displays with
    the arguments listed and an option to cancel.
    However, no argument is yet deleted.
    
    Forgot to add to previous commit but changed the
    else blocks in json_editor and
    edit_startup_arguments to elif blocks based on if
    the user_choice variable is greater than 0. This
    is because the function user_menu_chooser will
    return a 0 if the user enters an invalid choice.
    By checking for this instead of using an else
    block, the user can't get past a multiple-choice
    menu unless they enter a valid option.

commit 7b3abd515f81963de067cdf855cd5e3e4f772558
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 17:43:59 2023 -0400

    Made changes to the user menus and how invalid
    choices are handled
    
    Made a minor change to the use of newlines for
    styling the message "Please enter a valid choice"
    in the function user_menu_chooser. Also changed
    the message to "That is an invalid choice!".
    
    Tested this out with the main menu, the edit
    startup items menu, the edit specific startup item
    menu, the edit arguments menu, and the delete
    arguments menu.

commit 837bb0d484104fd61eda841a7600491ab5eca63d
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 16:43:08 2023 -0400

    Updated function set_startdir to use "Demord" as the
    start directory instead of "CompStart"

commit 95ca0335ad9e4856e1b85d9f791ed90ae04cce41
Merge: 6ac9821 03a9578
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 16:27:41 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit 03a957844b8cf7af8cdfe01cd93dbdb569701568
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 16:04:15 2023 -0400

    Update README.md
    
    Changed repo name from CompStart to Demord

commit 9a76fdec77eb39f2cc165009ff287807bc013f23
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 16:03:35 2023 -0400

    Update README.md
    
    Changed repo name from CompStart to Demord

commit 6ac982132fa78cfb90685fc210390358bf89d6d0
Author: David <hiranwatson@gmail.com>
Date:   Mon Oct 23 14:41:07 2023 -0400

    Made changes to the functions edit_startup_data
    and generate_user_startup_data
    
    Updated the docstring for the function
    edit_startup_data. Added a print statement to the
    function generate_user_startup_data that says the
    functionality isn't yet implemented and a blank
    startup file will be created. The startup file
    created isn't completely blank but has an empty
    object and array.

commit 405358394c7368eb96f06b6d82de4d203f070895
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 19 18:35:04 2023 -0400

    Updated edit_startup_arguments and
    edit_startup_item
    
    Refactored the two functions so the option to save
    the updated data is in the menu shown for
    edit_startup_item. Also, updated the code in
    edit_startup_item to update the argument count
    when the user edits existing arguments and adds a
    new one as well as when there are no arguments and
    the user adds some. Finally, updated the
    docstring for edit_startup_item to show that this
    function returns a list containing the updated
    startup items

commit ad31d3fc7cbc7e01529c8807ae505f45ae0b8d85
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 19 18:12:58 2023 -0400

    Updated and refactored edit_startup_arguments
    
    Added the options to delete an argument and to
    save changes. Refactored the code so it's more
    streamlined and less confusing due to the fact
    that the user now has at least 5 choices:
    
    - edit an argument
    - add an argument
    - delete an argument
    - save any changes
    - cancel and return to the previous menu
    
    The code before the refactor would have created
    multiple nested if-blocks within the menu loop to
    check for each possible option. Currently, the
    code has 3 nested if-blocks within the menu loop
    and 5 levels of nested flow statements from the
    function level:
    
    if > while > if > if > if

commit ef92584a839634c073810fed29120e661b636deb
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 19 18:08:58 2023 -0400

    Minor code and menu changes
    
    Changed the menu in new_file_chooser to not have
    the option to return to the previous menu. Changed
    the menu in json_editor to say "return to the main
    menu" so menus lower down can say "return to the
    previous menu" and it won't be confusing.
    
    Also refactored the code for the edit_startup
    functions when they check if the user input is
    blank or not. Instead of comparing the user input
    to "", the if blocks now just check if the user
    input variable has a value or not.

commit d12c1214a87a9a33665aab6f81f53784769adc49
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 18 18:48:12 2023 -0400

    Updated edit_startup_arguments
    
    Added in code to add a new argument to the
    arguments list. Refactored existing code to cover
    all main cases:
    
    - when editing an existing argument, make sure the
    menu properly displays the edited argument
    
    - when adding a new argument, make sure the
    argument is added to the arguments list at the
    end, the menu shows the new argument, and the
    options for adding an argument and canceling are
    updated in the menu and code logic
    
    Tested both cases plus canceling at the very end.
    Next, need to add in ability to delete an argument
    and a menu option to save the changed arguments
    list instead of having it save after every change.

commit ed0f4a3f481f4ae668e5fcd2823af68a1ca976f6
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 18 15:44:55 2023 -0400

    This reverts commit
    e276fcbc72a625f4a5a85f1330822d4c8733f5f6.

commit e276fcbc72a625f4a5a85f1330822d4c8733f5f6
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 18 15:42:04 2023 -0400

    Adding changes that should have been part of
    commit ebfeba8

commit ebfeba84565f9b2d51e172988faf2b81cbe5535b
Author: David <hiranwatson@gmail.com>
Date:   Wed Oct 18 15:38:57 2023 -0400

    Updated edit_startup_arguments
    
    Updated menu loop for edit_startup_arguments to
    work correctly when a user doesn't make a change.
    Also added code to both update the returned
    arguments list and the displayed menu when a user
    does change an argument. Finally, added a menu
    item to add a new argument. Need to code in the
    logic for that.

commit 410f25fd750ec5b6b2c447825651e5fdc68cdad6
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 18:56:41 2023 -0400

    Updated edit_startup_arguments
    
    Started adding in the functionality to edit
    individual startup arguments when there are
    existing arguments.

commit 60ed1a51c241ec341e9829362600b03fb950358b
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 18:25:33 2023 -0400

    Changed menu in edit_startup_item
    
    Because there is now a separate option to show the
    startup item data, removed the code to print the
    startup item each time after editing a specific
    portion.

commit 0b79077065362a8e51a9bbb53c7c0e0042596bab
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 18:00:19 2023 -0400

    Updated code for edit_startup_arguments
    
    Created a local list called new_arg_list and for
    now, set it to either be a copy of the return from
    the function add_startup_arguments or a copy of
    the arg_list passed in. Also added several print
    statements for functionality that isn't yet
    implemented.

commit 9dd5833dd3216345b9bc84e7e2cd08029a6b8d3a
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 17:57:18 2023 -0400

    Added new menu option in function
    edit_startup_item
    
    Added an option to show the startup data for the
    specific item being worked on. This will allow the
    user to recall the startup item data without
    needing to go back up one level.
    
    Also, moved the location of the function
    add_startup_arguments so it's before all the edit
    functions when going from top to bottom.

commit 71b1c553037a75545304a14f344f0448c396b328
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 16:25:01 2023 -0400

    Created helper function add_startup_arguments
    
    Started coding helper function
    add_startup_arguments which can be called any time
    a customer wants to add arguments to a startup
    item. For now, the function prints out that the
    functionality hasn't been implemented and returns
    the passed in arguments list, which defaults to
    blank just in case one isn't passed in.

commit ff2b7ed53c6d7149cfb345a4d8286bd44e5bb92a
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 16:21:21 2023 -0400

    Updated edit_startup_arguments
    
    Edited the docstring for the function
    edit_startup_arguments as well as wrote in the
    initial if-block. Currently, if there are
    arguments passed in, the function will return
    the arguments list as in by passing.
    
    If there are no arguments, the user is asked if
    they would like to add some arguments. The default
    reply is no, but if the user enters Y for yes,
    a new function called add_startup_arguments will
    be called.

commit 5f7a741f45207abd83a07bb6cb947dca40172efb
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 16:02:04 2023 -0400

    Created function edit_startup_arguments
    
    Created function to edit a startup item's
    arguments. The function takes in 3 parameters.
    The docstring for the function describes in detail
    how it works. The 3 parameters are:
    
    - args_exists: True if the startup item has
    arguments
    - arg_count: The number of arguments, is 0 by
    default
    - arg_list: The list of arguments, is blank by
    default
    
    Also updated edit_startup_item to call the new
    function when the user makes that menu choice.

commit afc69423fdd44678f151e19fdb9c641b8d25234c
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 14:12:34 2023 -0400

    Changes to generate_default_startup_data and
    generate_user_edited_data
    
    Changed generate_default_startup_data to just
    return DEFAULT_JSON and removed previously
    commented out code.
    
    Added code to generate_user_edited_data to create
    an empty Python dictionary using the ENUM classes
    and return it. Also, moved the explanatory
    docstring from generate_default_startup_data to
    this function.

commit b4b2647898a62334b5d34fdff9838af35bc7723b
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 14:12:22 2023 -0400

    Style changes based on changing JSON formatter

commit 9fdcb89ea050e26d748eed0c5af363f5ad7f43ea
Author: David <hiranwatson@gmail.com>
Date:   Tue Oct 17 13:34:35 2023 -0400

    Style changes from using different formatter

commit 5a9a847e971394c1664f0d9d1fc74a2d7558e125
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Oct 17 01:36:17 2023 -0400

    Finished coding helper function user_menu_chooser
    
    Decided to have helper function just print out
    the menu choices passed in, confirm if the choice
    is valid, and if not, print out that a valid
    choice is needed. The return integer will be 0 by
    default and only changed on a valid choice.
    
    All caller functions will be responsible for
    looping through and checking the return integer
    from user_menu_chooser.
    
    Also, updated the main loop, the function
    new_file_chooser to use a menu instead of a single
    question sentence, the function json_editor, and
    the function edit_startup_item. Made sure all
    menus have an option to return to the previous
    menu.

commit 5bf1c5919c740dc6204b953bc8faf907ad1c76f0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 23:38:57 2023 -0400

    Created new helper function user_menu_chooser
    
    The idea is to extrapolate the showing of any user
    menu to a helper function. The code isn't working
    yet and needs to be fixed. Currently, I'm not sure
    whether the helper function should loop until a
    valid choice is made or the caller function.

commit 45500113cda3731f115808527958537ff51af607
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 23:00:02 2023 -0400

    Refactored user choice code in both json_editor
    and edit_startup_item
    
    Refactored the code governing the loop and the
    user choice of options to make them in line with
    the main loop using the format:
    
    Choose from one of the following:
    [1] Choice 1
    [2] Choice 2
    
    What would you like to do?
    
    In json_editor, added code to allow for the
    variability number of startup items. For example,
    if there are 3 startup items, the first 3 choices
    will be "Edit startup item #" with the next 3
    being "add a new item, delete an item, return to
    previous menu". The last 3 will always be that but
    will be numbered according to how many startup
    items there are.

commit a2e608a8d2d04cd9a6b6cf9cd482d3ceda85d34c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 22:27:36 2023 -0400

    Testing startup data editor functionality
    
    Removed one comment line and rewrote
    test_data.json with default startup data for
    testing.

commit b8f961c12ad57bf86d19763e80e8c940d2eda670
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 22:15:04 2023 -0400

    Committing the modified test_data.json file after
    testing the previous changes

commit 890f4b54dc67ff1cfba017b500e8d9dbada5ae96
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 22:10:11 2023 -0400

    Coded for edge case where total items in startup
    data is greater than 0 but the items array is
    blank
    
    While testing out previous changes, stumbled on an
    edge case where the items array is blank but the
    total items key has a value of 1, or not 0. This
    was most likely caused by an accidental manual
    editing of the test_data.json file and should
    never happen in production, but added code to
    both the prettify_json and json_editor functions
    to handle this edge case. Now, if there are no
    actual startup items to display, both the main
    loop choices to view and edit the existing data
    will state there are no startup items to display.
    This covers both the edge case and also a regular
    test case where a user might choose to view or
    edit startup data that doesn't exist.

commit c0c07eebf135c7f069b1fe0e2a23f4ede3e3ddcc
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Oct 16 22:00:59 2023 -0400

    Added, edited and fixed code related to creating a
    new startup file
    
    In the function new_file_chooser, corrected the
    question because it was displaying incorrectly.
    
    In the function generate_default_startup_data,
    commented out all the code that uses the ENUM
    classes to create JSON data and just copied the
    constant DEFAULT_JSON. Did this because the code
    using the ENUM classes only creates one startup
    item but have now decided to use 3 startup items
    as default.
    
    In the function generate_user_startup_data, used
    the ENUM classes to generate startup data with
    total items as 0 and a blank items array. Also,
    added docstring data.
    
    Finally, made a minor edit in the function
    generate_json_data.

commit c60b0539224096b260250306be1f0188845dd319
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 12 18:58:30 2023 -0400

    Refactored the EXAMPLE_JSON and EXAMPLE_TWO
    dictionaries
    
    Decided to make the default data the same as
    EXAMPLE_TWO. Removed EXAMPLE_JSON and renamed
    EXAMPLE_TWO to DEFAULT_JSON to better reflect its
    purpose.

commit 97c6aeaf99b039f9a6ed9dff6ae60cb90e33965b
Author: David <hiranwatson@gmail.com>
Date:   Thu Oct 12 18:54:52 2023 -0400

    Created new helper function and function rename
    
    Created a new helper function, new_file_chooser, so in the main loop, instead of 5 options, there's only 4 and only 1 for creating a new file. If the user selects 1, then this helper function is called and will ask the user whether to create a new startup file with default data or user-provided input.
    
    Redid the main loop to reflect the logic change. Also renamed choose_file to edit_file_chooser to better reflect the function's purpose and to differentiate from new_file_chooser.

commit 7760c506cd06ac3c57af7d08aa945647f8c2512b
Author: David <hiranwatson@gmail.com>
Date:   Fri Sep 29 18:55:05 2023 -0400

    Saved an empty file in last commit but pasted the actual text now

commit a0117d501fe5d2b21746845a22bb6173f0768b2e
Author: David <hiranwatson@gmail.com>
Date:   Fri Sep 29 18:53:54 2023 -0400

    Adding new MD file in misc_data with markdown examples and text

commit 197ffe3efd292cecb0e51e7a6df1bb92ec9791cb
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 28 18:34:17 2023 -0400

    Forgot to add something in previous commit
    
    In previous commit b781a75, forgot to include the
    change to the match-case statement for "D".

commit b781a751c2b5d01e56f5acb1303cff9137b1bda4
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 28 18:31:28 2023 -0400

    Added new option when editing a startup item
    
    Added option to delete a startup item. Also,
    refactored the if statement for that question so
    there aren't so many OR statements.
    
    For example, the if statement now checks to see if
    the user_choice variable is an alpha character and
    if so, if it's in the list ["Q", "D", "A"],
    standing for Quit, Delete, and Add.

commit c64db116f7a2d6582162b3429d2397a505a78d2d
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 28 17:59:57 2023 -0400

    Function order rearranging and renaming
    
    Rearranged the order of the functions to follow
    a rough pattern of the smallest helper functions
    near the top just after the import statements and
    the two EXAMPLE dictionaries, and the major
    functions near the bottom just before start_dir
    and the main loop.
    
    Also renamed some functions for clarity:
    
    create_json_data => generate_json_data
    generate_json => generate_user_edited_data
    generate_default => generate_default_startup_data
    get_startup_data => generate_user_startup_data
    
    Changed the calls to those functions to reflect
    the new names.

commit 87c7f45589bd80fa8448a90f7ba65129576e78a2
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 28 17:01:00 2023 -0400

    Created function definition for get_startup_data
    
    Created the function get_startup_data and for now,
    it returns an empty dictionary. Also, updated the
    return statement in generate_json because it's
    supposed to return an empty dictionary but was
    returning an empty list.

commit e51aa85d3b7717c9ac445d001b6fcd3baba2acb3
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 28 16:46:42 2023 -0400

    Added new option in main loop for creating new
    startup_data.json files
    
    Modified main loop to allow user to create a new
    startup file with default JSON data, or create a
    new file with data that they specify. This rewrote
    the max choices and choice numbers.
    
    For the function json_creator, added a boolean
    parameter to specify which type of new file to
    create. Updated the docstring to explain the
    changes. Also updated the call to create_json_data
    to pass in the boolean parameter.
    
    For the function create_json_data, added a second
    boolean parameter to specify which type of new
    file to create. Updated the docstring to explain
    the changes. Also updated the if block to account
    for the new scenario. The two boolean parameters
    are now set to False by default. The first
    parameter has to be changed to True to create a
    new file. If that's the case, then the second
    parameter is taken into account. If it's true, use
    default data for the new JSON file. If it's false,
    call a new function called get_startup_data that
    will serve to get the data the user wants to add.

commit 0b361fc0e1614cf5858e61eed513bd1f9e0bf4eb
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 27 18:08:06 2023 -0400

    Copied the function set_startdir from test.py
    
    Copied over the function set_startdir from test.py
    to make sure the script starting directory is
    always the CompStart project root folder. This
    will allow the program to be run from anywhere and
    it will always correctly find the startup_data
    JSON file.

commit 8268664f4ef81a240f2928105cf1173cf383012f
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 27 18:00:36 2023 -0400

    Modified print statements in edit_startup_name,
    edit_startup_path, and edit_startup_description
    to say "No change was made..." when existing data
    is being used

commit 4f240cfa771bb962899d8e1253fed02975f928e9
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 27 17:58:22 2023 -0400

    Added print statements to edit_startup_name and
    edit_startup_description to state when a change
    hasn't been made

commit 4452a5a265049f09dbefacad2d71fb6c2524d535
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 27 17:55:31 2023 -0400

    Created two functions to edit a startup item's
    file path
    
    Created helper function edit_startup_path to edit
    the file path for a specific startup item and
    return it. Updated edit_startup_item to call the
    function and also to update the startup_item
    dictionary as well as display the updated items.
    
    Also created a helper function called choose_file
    to display a file chooser dialog using Tkinter.
    In edit_startup_path, the user is allowed to
    choose the file chooser dialog or to manually type
    in the full file path.

commit 0a825130d213f05dac9f5bd558d2c33be92cf8bd
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 27 14:08:52 2023 -0400

    Made changes to Python formatter line length

commit 3abee535b6eb8b27e0aaa83700a7fc18720c6f26
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Sep 27 10:28:22 2023 -0400

    Created function to edit a startup item's
    description
    
    Created helper function edit_startup_description
    to edit the description of a specific startup item
    and return it. Updated edit_startup_item to call
    the function and also to update the startup_item
    dictionary as well as display the updated items
    details.

commit 62767c4c6644547eac4efbde5b2cbb97477c0976
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Sep 26 21:59:13 2023 -0400

    Created function to edit a startup item's name
    
    Created helper function edit_startup_name to edit
    the name for a specific startup item and return
    it. Updated edit_startup_item to call the function
    and also to update the startup_item dictionary as
    well as display the updated items details. Also
    added a docstring for both functions.

commit 936ef43983612692d73a3701bf3f407f33f56b3f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Sep 26 21:21:09 2023 -0400

    Changes to test.py
    
    Minor changes to test.py based on a change in line
    length. Also, made some code changes to ensure all
    tests run correctly.

commit 1a2b5e67fe6d217bacc97cbd8c62464a760bc088
Merge: bacf74d a149630
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Sep 26 21:11:26 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit a14963076468f17dbb5c72b34d3ac359e430313a
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Sep 26 21:01:30 2023 -0400

    Updated main README
    
    Updated README.md in project root to organize the
    files by folder and also to update the files list.

commit 91f9f3fc063a7c5f908f3812465f29e71b5be261
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Sep 26 20:50:25 2023 -0400

    Adding suggestions from robswc
    
    Created a text file with Reddit user robswc's
    suggestions for project changes and enhancements.
    Will most likely create a new branch for that.

commit bacf74d19aa958c720b301a146e4a54930d53693
Author: David <hiranwatson@gmail.com>
Date:   Mon Sep 25 18:05:36 2023 -0400

    Changed back to using testing environment

commit 9e5d3cb0ab7cbb619d2722b9b9e4ce1b4028d4ee
Author: David <hiranwatson@gmail.com>
Date:   Tue Sep 19 18:53:21 2023 -0400

    Fixed some escape characters in strings to be double slash

commit ca1a90b0b5ad3dadac2bac51dce22a75fa84b8ad
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Sep 18 15:34:41 2023 -0400

    Made changes to the JSON being tested
    
    Changed the dictionaries storing JSON data set up
    in the setUpClass function to be lists instead.
    This will make it easier to update should the JSON
    data schema changes.
    
    Updated the test functions that compare file JSON
    data to these variables so that a dictionary is
    created at the point of testing using the lists.

commit 0b1f435a70dd6a3030aa6c08dcd060ad4ac1cf4e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Sep 14 21:06:19 2023 -0400

    Minor spelling change

commit 17e1740ce8317c81aa60473410f2bc7fa96433d2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Sep 14 21:03:07 2023 -0400

    Made a change to how startup items are printed out
    and the loop for edit_startup_item
    
    Added in prettify_startup_item a line to print out
    the item program or file path as well as the other
    data. It doesn't print out if the item is a
    browser or not, but the plan will be to determine
    that during the adding or editing of a startup
    item.
    
    Also changed the loop in edit_startup_item to be
    more like the loop in json_editor in terms of the
    logic.

commit 0e1d39600377f0409e7f949ad362ea73c8f0b331
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 14 19:00:51 2023 -0400

    Added more to edit_startup_item
    
    Created a loop allowing the user to pick which
    item property they would like to edit. Copied the
    same code as the main loop at the start of the
    program.

commit f9edd9b47a939e4f990992fe45cbefa863f371ef
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 13 18:45:39 2023 -0400

    Made changes to the descriptions for some
    startup_data.json startup items
    
    Some descriptions had a '\n' added to the value
    string. This was affecting how the function
    prettify_startup_item printed things out. Removed
    those '\n' references.

commit fa9ec3d37631298b072289b73ab0ea3d56f437a2
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 13 18:42:34 2023 -0400

    Added new helper function called edit_startup_item
    
    This helper function is called by the json_editor
    main loop when a user selects to edit the startup
    data. Commented out several lines and updated some
    comments to make the flow of things a bit
    different. Now, when a user selects to edit the
    startup data from the initial main loop, the total
    number of items is displayed along with the
    choices added in the last commit. Once a user
    selects a startup item number, then the details
    of that startup item is displayed.

commit 9cc554bcfe9a11dcec1f8cf0054cfc09ed9c5f96
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 23:28:39 2023 -0400

    Added code to parse user input for json_editor
    loop
    
    Filled out the if block for when the user enters
    valid input. First the input is formatted. If the
    user entered "q" or "a", convert it to uppercase.
    If the user entered a startup item number, convert
    that to an integer. Next, a match-case is used
    with currently, case "Q" setting the loop to quit,
    case "A" printing the functionality hasn't been
    implemented and then setting the loop to quit, and
    the default case being to print out the startup
    item number selected.

commit 7fd27fc2aeaf40a54f67f34af9bc66abd88f9ca0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 23:14:17 2023 -0400

    Added comments, docstrings and two updates to
    json_editor
    
    Created a docstring for json_editor as well as
    added comments throughout the code. Also added the
    option to type "A" if a user wants to add a
    startup item. Finally, moved the code to display
    the startup data and loop for user input to run
    only if the call to json_reader was successful.

commit 0354d260054224870d4b84c0d9ef9c5f0cb9509d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 22:59:58 2023 -0400

    Started work for case 3 of the main loop
    
    Created function json_editor in similar fashion to
    json_reader and json_creator. Started coding the
    function and currently it will print out the
    startup data and then ask the user which startup
    item they want to edit. Will loop through until
    valid input is given, which is a number
    corresponding to an actual startup item or "Q" to
    go back to the main menu.

commit ca82fffdca7c62d280ad21467906daec624ef9f2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 22:59:01 2023 -0400

    Minor commit
    
    Switched environment to prod so can test with the
    full startup_data.json file. Also added a comment.

commit 3a644acebe555aae737dd9dfa5acddc3895fb7df
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 22:34:09 2023 -0400

    Tested displaying startup data with production
    startup_data.json file
    
    Came across two use cases that caused issues. The
    first was when the arguments list has only 2
    arguments, so changed the if block in
    prettify_startup_item to treat an argument count
    of 2 the same as more than two. The second was
    when the startup item is a browser and the last
    argument passed in is a list of websites to open.
    Added in an if statement to check for that and
    use the string join function to convert the list
    into a string with a space between each website.

commit d14faa09b20fc0b7f6a6c38cec11b3e199ae7f30
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 02:49:56 2023 -0400

    Created test functions for the function
    prettify_startup_item in startup_data_editor.py
    
    Created three test functions to test a startup
    item with no arguments, with one, and with
    several. They were all taken from
    self.APPEND_EXAMPLE_TEST.

commit d2670ab7fec4bdab9798f9989be3b2d654ae0005
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 01:58:38 2023 -0400

    Created new test function for prettify_json in
    startup_data_editor.py and several other changes
    
    Added new test function to test the function
    prettify_json in startup_data_editor.py. Along the
    way, also updated cls.APPEND_EXAMPLE_TEST to have
    the same JSON data as currently what's in
    test_data.json.
    
    Renamed the cls.func_counter variable to
    cls.function_counter. Added the new test function
    to the list of all functions so it's part of the
    random pick. Finally, added a small congratulatory
    message at the end of the test_suite function.

commit 40ef5876cfddde7439201c085bf2013f8a526e81
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 10 00:57:24 2023 -0400

    Randomized order of test functions and created
    ability for user to pause between each test
    
    Created a loop that will go through all the test
    functions but in random order every time. Also
    added question to ask user if they want to pause
    in between each test. The default is no, but if
    user enters "Y" or "y", after each test function
    is run, the user will be asked to type a key to
    continue. This will allow them to read the output
    of each test if so desired.

commit 0d17325e05382d2ba479a52c18024b8f8248af39
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 23:59:48 2023 -0400

    Changed how the test functions are ordered and
    numbered
    
    Created a class variable that acts as a counter
    and is incremented every time generate_message is
    called at the beginning of a test function. This
    means the test functions don't need to pass in a
    test number and can be called in any order but
    the printout will still say "Test #" in order.

commit c72d570f499b7e434ac8655ad5b695614472f5c5
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 23:47:36 2023 -0400

    Created tests for the function prettify_error in
    startup_data_editor.py
    
    Created three fn_prettify_error functions, one
    testing for trying to read a file that doesn't
    exist, the second testing trying to write to a
    file using a directory that doesn't exist, and
    third a random error. Tested and confirmed they
    run properly.

commit 1b34956e4506ceec4080080b1abcb2aa3a5e54ba
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 22:55:32 2023 -0400

    Adjustments to json_reader_valid_file
    
    Added a call to the function json_writer in
    startup_data_editor.py to make sure the data in
    the unittest_data.json file is exactly as
    expected. Also changed the call to the json_reader
    function to use unittest_data.json instead of
    test_data.json.

commit c746981b5c62f061b657fe95928748ed62e5394f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 22:47:07 2023 -0400

    Minor change to test.py
    
    Forgot to update the expected output for the test
    function json_reader_wrong_file_extension.

commit 71877972971bdbf5e810c0d80f687e75516ed420
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 22:41:15 2023 -0400

    Several changes to formatting and printed output
    
    Made changes to test.py to be in line with commit
    d0971ce where references to "JSON file" or "JSON
    data" were changed to "startup file" or "startup
    data" in startup_data_editor.py. Test.py's test
    functions now reflect this and don't return false
    negatives.
    
    Also changes were made to formatting the same as
    in commit 38ec4c8 where, because the default line
    length was updated to 100 from 80, several lines
    of code that previously was split over multiple
    lines became one line of code.

commit f8123d40c10d5ffb36be45b68c3f889d50861e07
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 22:25:29 2023 -0400

    Added return information to the docstring for
    the function prettify_error

commit 0c67740ee2364f86f1865d0374643e3f073cbc5e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 22:02:03 2023 -0400

    Wrote code for prettify_json and created a new
    helper function
    
    Rewrote the code for prettify_json to actually
    take the JSON data and format it nicely into a
    string.
    
    Also created a function called
    prettify_startup_item which handles the formatting
    for each startup item including all its
    properties.

commit f4254aab805d9251f3637dac619d92cecfea0a46
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 21:59:38 2023 -0400

    Updated test_data.json
    
    Made some more changes to the startup data to
    test the code for displaying existing startup data
    and specifically, to handle the case where there
    are no arguments, where there's only one, and
    where there are 2 or more.

commit 38ec4c8c4b4045e74180f5d140ee5f8c33f280b9
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 19:45:27 2023 -0400

    Adjustment to the default line length
    
    Adjusted the default line length for the Python
    formatter from 80 to 100. This caused several
    lines of code to be reformatted including from
    being broken up across several lines to being on
    one line.

commit e51536e5cc28f4bf15d4b0156af1dbe33b33f5f1
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 19:39:55 2023 -0400

    Added a new global dictionary called EXAMPLE_TWO
    
    Took the same JSON data added to test_data.json in
    commit f8b6d0b and added it to
    startup_data_editor.py as a new global dictionary
    in addition to EXAMPLE_JSON.

commit f8b6d0b9661b0bfd62166f606c5985d7ee763bd0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 19:34:17 2023 -0400

    Updated test_data.json with more examples of
    startup items
    
    Took the dictionary APPEND_EXAMPLE_TEST from
    test.py and pasted it to test_data.json. This JSON
    data has 3 startup items, including one that's a
    website open in Chrome. This will allow greater
    testing.

commit a1eb0b4bd22971c4357eed01b6f656ea9fb7f9aa
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 19:26:24 2023 -0400

    Saved test_data.json in a formatted way to make it
    easier to work with while updating
    startup_data_editor.py

commit 3c693d3fc6ba6cecd1153e5b4593eea8d13febfe
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Sep 9 19:21:55 2023 -0400

    Made a change to the logic of the main loop to
    fix a bug
    
    Realized that when getting the user input for the
    main loop, if the user entered an non-numeric
    character or word, an error was thrown because
    the line of code casting the user input to an
    integer needed to be in an else clause for the
    if statement checking for valid input.
    
    Fixed that and confirmed it now works. Any input
    that's not a valid choice, which is currently 1-4,
    shows the "Please enter a valid choice" output and
    continues the loop.

commit 241cae0aea4db589ed8bf03bd102edc26a2ff14f
Author: David <hiranwatson@gmail.com>
Date:   Fri Sep 8 19:22:09 2023 -0400

    Created helper function prettify_error and other
    changes
    
    Created a helper function to use for all
    try-except blocks. This way, the except block can
    call this function and this avoids duplication of
    code.
    
    Also updated the doc strings for the functions to
    be more consistent in indenting and spacing. Some
    docs strings were also updated to indicate the
    function is a helper function.
    
    Changed the main loop to not quit if the user
    chooses 3 but just display that ability isn't
    available. Also fixed error where the numbers
    considered acceptable choices were hardcoded in.
    Instead, created a variable max_choices to easily
    update if the number of choices in the main loop
    changes.

commit d0971ceadd3464d2cd125a17d2a08cb15a8baa6e
Author: David <hiranwatson@gmail.com>
Date:   Fri Sep 8 16:52:30 2023 -0400

    Renamed all mentioned of "JSON" in print
    statements to "startup"
    
    This will make the output more user friendly and
    maintains consistency by using "startup file/data"
    in reference to the JSON data.

commit 814fced27a6d1586117a95f993c927f7584f5c5f
Author: David <hiranwatson@gmail.com>
Date:   Fri Sep 8 16:44:45 2023 -0400

    Changed the name of print_pretty_json to
    prettify_json and rearranged the order of the
    generate functions

commit 938da1a3c8776df7199fa0b4cc2ef82d2e9af57c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Sep 7 19:50:56 2023 -0400

    Changed how the main loop is handled and created
    a new helper function
    
    Changed the main loop logic from an if-elif-else
    block to a match-case block. Also moved the print
    statement of the variable status_message from
    outside the conditional block to inside each case
    block.
    
    Finally, created a function called
    print_pretty_json which is called when the user
    chooses to view the existing JSON data. Currently,
    this function just calls json.dumps and adds an
    indent of 2. Will need to rewrite the code to
    go through the JSON data dictionary and properly
    parse it.

commit 2343c09a28ec9dbdefd1c0b7b5701c4ce4907970
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Sep 7 19:50:09 2023 -0400

    Added option in main loop to view the existing
    JSON data

commit 2a3e30f0ec929faac4bb4048a01d777d6ce1fe39
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Sep 7 19:20:29 2023 -0400

    One final tweak to test.py
    
    Changed set_var to accept a parameter called
    'return_type' as an integer. This allowed to use
    just one variable called self.sde_func_return
    and based on the parameter passed in, that
    variable would be initialized per the following:
    
    1 - string, default ""
    2 - boolean, default False
    3 - dictionary, default {}
    4 - tuple, default ()

commit ddaf13b5cfd1bf70f07360254714f77b6018c06d
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 18:39:54 2023 -0400

    Renamed new_test.py to test.py and deleted the old
    test.py

commit 9817332154c430b2aae127c8a6ca90af75aaf7a5
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 18:38:21 2023 -0400

    Forgot to add in previous commit an import change
    
    In order to facilitate countdown, had to import
    the time module.

commit f5752d2e693ab801e7c9c2ef5df6666ef850bff1
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 18:37:11 2023 -0400

    Added 3 second delay to start of test_suite
    
    Added a 3 second countdown to the start of
    test_suite just so everything doesn't run so fast.

commit e850a077a6ff7a1ba4179bbdf1750eff77a67c94
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 18:14:55 2023 -0400

    Refactored code to have one function called
    test_suite that calls all the other functions
    
    Renamed all the other "test" functions to start
    with "fn" and removed the numbers. In the
    "test_suite" function, called all the actual
    "test" functions in the order they should be. Did
    this so it will be easier to reorder functions,
    create new ones or skip some when fixing a bug.
    
    As part of the process, had to create a new helper
    function to reset the variables:
    self.expected_message /
    self.sde_func_str_return /
    self.sde_func_tpl_return /
    self.sde_func_dict_return /
    self.sde_func_bool_return
    
    Updated all the "fn" functions to call this helper
    function as the first thing so it wouldn't mess up
    the above variables.
    
    Finally, rearranged the placement of the helper
    functions with respect to the code and also the
    ordering of the "fn" functions.

commit 5393aa9ae42122ac650117ff32c8af110a472040
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 16:56:46 2023 -0400

    Updated generate_test_message
    
    Refactored generate_test_message to take 4
    parameters:
    
    test_num = the test number
    func_name = the test function name
    msg_addons = a boolean indicating if there's more
    to output
    msg_extras = a dictionary containing the more to
    output if msg_addons is True
    
    This allowed for cleaner code and logic within the
    generate_test_message function as well as easier
    grouping of what to write when each test function
    calls generate_test_message. Also changed the
    output of generate_test_message to show:
    
    Test #: Testing function ...

commit 2cee4428f99d94d077497c86c1e76d0eaf1e8a60
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 12:43:06 2023 -0400

    Renamed and reordered test functions due to the
    addition of a new test function

commit 5ce9a78adf758e60119cb753e6457e3c7c565360
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 12:39:25 2023 -0400

    Wrote up function test_json_writer_case_one
    
    Filled in the test function to test json_writer
    with the parameter 'file_state' as 1. Created two
    versions of the test function and mocked the input
    as "Y" for one and as "N" for the other.

commit 2b23f8fc047f85b034ad3ebe7c4afdad363ca45f
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 12:31:26 2023 -0400

    Renamed and reordered the test functions due to
    the new test function

commit 9185008027c2208996c42baf40d5156df0106a58
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 12:28:29 2023 -0400

    Created new test function
    
    Created a second test function for json_writer
    with the 'file_state' parameter having a value of
    two because need to test that case for 2 different
    scenarios - when the JSON data to be written is
    different and when it's the same.

commit 6fbb4550333f26a96f8e4694c578dd7c66df2188
Author: David <hiranwatson@gmail.com>
Date:   Thu Sep 7 11:41:26 2023 -0400

    Created new helper function
    
    Created function clear_test_file for the tests
    that write JSON data to file. These are the
    test_json_creator and the 3 test_json_writer
    functions. In all four of them, there was an if
    statement checking for the existence of the file
    and removing the file if it already existed. That
    if block is now the helper function
    clear_test_file.

commit 6302d5e2535ef352cb9ccddb22e82b99205c564b
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 18:57:27 2023 -0400

    Changes to printed output
    
    Made some tweaks to the printed output for the
    helper functions and the one test function that
    still needs to be worked on.

commit 86f839d8547e192a6360b5a7c2b60a3e654f1ab2
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 18:49:54 2023 -0400

    Created helper function generate_test_message
    
    Created helper function to handle printing the
    "Testing " message at the start of each test
    function and updated each test function to call
    the helper function. It takes 2 parameters for the
    function name and an optional addon to specify
    when testing with certain inputs, etc.

commit 805a98c7668d139e3d3e96c3af1faabcdd03ddfa
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 18:23:01 2023 -0400

    Moved location of helper function
    confirm_written_data
    
    Moved the helper function to just under the
    setUpClass function and above the other helper
    function print_results. This way, all the test
    functions are grouped together and all the
    helper functions are as well.

commit 989b9676efbecb513c52922a7c4e7f1251e3fad5
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 18:20:18 2023 -0400

    Created helper function print_results
    
    Created helper function to print both the
    "Expected: " and "Actual: " messages at the end of
    each test function. Updated all the functions to
    call this helper function, passing in the specific
    data to print out for the "Actual: " line. The
    helper function casts that data passed in to a
    string.

commit c6af39e9dce12f9aa9bb974edcfabadcbedf3ebf
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 18:05:21 2023 -0400

    Created helper function confirm_written_data
    
    Created helper function to read in the contents of
    unittest_data.json and compare it to whatever
    JSON data was supposed to be written to the file.
    This is called by the test_json_creator function
    and the 3 test_json_writer functions. They each
    pass to this helper function the dictionary to
    test against.

commit 3d0df39057543835fcb298caada217093932b3d0
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 16:48:40 2023 -0400

    Added some comments above each test function
    
    Above each test function, added the type of
    return_value variable needed or used. The plan
    will be to see if one or more helper functions
    can be created to assist since 2 of the test
    functions use Boolean, 4 use Dictionaries, 7 use
    Tuples and 1 uses String.
    
    There are also other areas in some of the test
    functions that have duplicated code that can be
    farmed out to a helper function.

commit f4409b14336930449f076977a968fdddadf0cc3e
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 16:14:56 2023 -0400

    Filled in function test_generate_json

commit 3b3e0fa16e932f20ded2658a4ae96ec390e6a6d9
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 16:07:07 2023 -0400

    More edits to self.expected_message
    
    Rewrote the self.expected_message lines to
    use the variable return_value in each test
    function and just cast it to a string.

commit 430b0abaf53a5f11bee65f7fc2bf127ae8ef9587
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 15:04:11 2023 -0400

    Figured out how to order the tests
    
    After some trial and error, determined how to
    order the tests to set in which order they run.
    Adjusted the print statements at the beginning of
    each function as a result. Also removed the
    'notest' for the two tests not yet written so they
    still run as part of the test suite but just
    output that the function being tested is being
    skipped.

commit eb76e31b644d92e289a8a511d13541790bc8cdfc
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 13:06:28 2023 -0400

    Added new non-class function
    
    Created helper function to set the start directory
    to be the program CompStart root folder even if
    new_test.py is run from a different working
    directory. This is called from the main if
    statement and isn't part of the Test class.
    
    This function also assumes "CompStart" is
    somewhere in the working path and doesn't error
    check for that. This was done because new_test.py
    will always be called from within a project
    directory.

commit 9c1af1589fb697c785c597fc183cb3a564f1b9a9
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 13:05:31 2023 -0400

    Removed references to self.expected_message
    
    In all the self.assertEquals calls, removed
    the self.expected_message parameter.

commit 2cb701f829fa89fba746f42852fba081c8fd11f6
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 12:00:36 2023 -0400

    Changes to expected_message variable and addition
    of some comments
    
    In setUpClass, added or adjusted some comments and
    added some whitespace to make the code cleaner to
    read. Also initialised the cls.expected_message
    variable to "Expected: " since every test function
    prints that out. Updated all the assignment
    statements to self.expected_message to reflect
    this.

commit ecabbacfee8366c629d1630ab02f6d73e96ff7b1
Author: David <hiranwatson@gmail.com>
Date:   Wed Sep 6 11:36:26 2023 -0400

    Created a copy of test.py
    
    Copied test.py and called it new_test.py. Will go
    through this new_test script and see if the code
    can be refactored using the DRY principle, such as
    creating helper functions, etc.

commit 89d0db211462b9610525c8a85b710c0cbc643f76
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Sep 6 10:44:58 2023 -0400

    Adjusted printout for each test
    
    Changed the print statements from each test
    function including the self.expected_message
    variable to the following format:
    
    Testing function name
    Function output, if any
    Expected:
    Actual:
    
    For the actual line, I convert
    self.sde_func_xxx_return variable to a string, if
    it's not already a string.

commit be9a13e739004871d6b6694671d5b35346e9bcd9
Author: David <hiranwatson@gmail.com>
Date:   Tue Sep 5 18:48:16 2023 -0400

    Made test_check_overwrite_no as its own function
    
    Copied test_check_overwrite_yes and changed mock
    input to "N". Then ran all tests - 12 in total at
    this point - and confirmed they all run
    successfully as well as print out the relevant
    output necessary, such as for the tests that
    cause JSON data to be written to file, checking
    that, after calling the function in
    startup_data_editor.py, the data written is
    correct in addition to the function returning as
    expected.

commit 8a6d523647949d9507f902b206d6f0ca74f354c8
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 3 02:25:48 2023 -0400

    Wrote up functions test_check_overwrite for 'yes'
    and 'no'
    
    Using unittest.mock's patch decorator, finished
    the function test_check_overwrite. Decided to
    split the function into test_check_overwrite_yes
    and test_check_overwrite_no. Used the patch
    decorator to supply the user input values and
    confirmed both test functions work.

commit 841d7a27e4e8c36234e554c029cf54f1225b4c8c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 3 01:51:20 2023 -0400

    Finished writing function
    test_json_writer_case_two
    
    Finished coding the function to test json_writer
    with a 'file_state' of 2. Confirmed the test fully
    works.

commit 330e9e8f5584e8caa79d762a91a39c2298a4cc22
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 3 01:49:06 2023 -0400

    Updated try-except block code in function
    test_json_creator
    
    Changed except block in try-except block when
    reading in the JSON file to print the actual
    error message data.

commit 2cdadd91c260c8ff16712892a9bf2ff8c3ca5611
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Sep 3 01:35:23 2023 -0400

    Reran tests and updated
    test_json_reader_valid_file
    
    Changed all the 'fntest' functions back to 'test'
    and ran them all. Noted an error in the function
    test_json_reader_valid_file. Traced it to the fact
    that the function was using all the TEST variables
    but other test functions overwrite the data to
    unittest_data.json. Changed
    test_json_reader_valid_file to read from the JSON
    variables instead since that test_data.json is
    never overwritten in all the unit tests.

commit 518adbe7bdefba78bb7f25f3151beaedc3851512
Author: David <hiranwatson@gmail.com>
Date:   Sun Sep 3 01:09:20 2023 -0400

    Started working on test_json_writer_case_two
    
    Copied over the code from
    test_json_writer_case_zero to
    test_json_writer_case_two and made some changes.
    
    Also created a new dictionary in setUpClass called
    cls.APPEND_EXAMPLE_TEST with different JSON data
    than cls.EXAMPLE_TEST and cls.EXAMPLE_JSON. This
    will be used in test_json_writer_case_two to test
    that new JSON data was actually written.

commit e71a9e333d7c1397be683e6e94aefdab2aa0342a
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 15:07:14 2023 -0400

    Minor code changes to test.py
    
    Updated two print statements to reflect the
    parameter renaming mentioned in commit 0feb68d.
    Adjusted one print statement to use self.TEST_FILE
    rather than self.JSON_FILE.
    
    Refactored some code to use json.dumps instead of
    explicit typecasting JSON data to str and to
    use the copy function of dictionaries rather than
    just assign a global variable to a local one.

commit 0feb68d1cec24ba9a7eefca34fab883e6f857433
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 15:03:57 2023 -0400

    Resubmitting changes from commit 8e013ad along
    with the code change I forgot to include in that
    commit.
    
    Renamed the parameter from 'default' to 'new_file'
    which reflects better the purpose of the
    parameter. This way, it's easier to tell that when
    the parameter is True, then a new JSON file will
    be created and if false, then the file already
    exists. In total, 3 lines of code were changed.

commit 3f8ff9626edb8b6250a6df8d0c48232ffe7e2547
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 15:01:08 2023 -0400

    This reverts commit 8e013ad (Renamed parameter
    passed into the function create_json_data,
    2023-09-02). Forgot to include one code change in
    commit 8e013ad.

commit 8e013ade71ddd22226320b2942c787216769008f
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 14:57:28 2023 -0400

    Renamed parameter passed into the function
    create_json_data
    
    Renamed the parameter from 'default' to 'new_file'
    which reflects better the purpose of the
    parameter. This way, it's easier to tell that when
    the parameter is True, then a new JSON file will
    be created and if false, then the file already
    exists.

commit f69117058436c848c677f6223131c4462229b51e
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 11:43:04 2023 -0400

    Updated case 2 try-except block
    
    While testing, noted that the variable
    existing_data, which is used to store the existing
    JSON file information when read in, may not be
    bound due to it only being assigned anything in
    the try block and also not being declared
    elsewhere. Added a line in the except block to
    set existing_data to be the same as the json_data
    variable, which still allows the if statement
    after the try-except block to work.

commit 4d053cf457ed651b27c61c4509edbfd0a80eb644
Merge: 0dd83ec 3085c47
Author: David <hiranwatson@gmail.com>
Date:   Sat Sep 2 11:40:42 2023 -0400

    Merge branch 'features/startup_data_modifier_tool' of https://github.com/dEhiN/CompStart into features/startup_data_modifier_tool

commit 0dd83eccf182bac32fcc7dd99b5aedab34cb0a5b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 23:31:42 2023 -0400

    Adding onto commit 3085c47
    
    Commit 3085c47 didn't include all the changes made
    and mistakenly mentioned that the json_writer
    function code changes still had to be made.
    However, commit 3085c47 contains both the
    docstring and code changes to json_writer.
    Unfortunately, commit 3085c47 was already pushed
    to GitHub, so this new commit is being used
    instead. There are no actual changes being
    committed.
    
    So, in commit 3085c47, I refactored the code in
    case 2 to now read in the JSON file and then check
    to see if it's the same as what's been passed in.
    If it isn't, we set the file_mode to "w" because
    there's updated JSON data to write. This ensures
    that when the case is 2, while a file read
    operation is performed, a file write operation
    isn't performed if not necessary.

commit 3085c47256c77f53f09205c8caf97befbd4a517f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 23:31:42 2023 -0400

    Updated the docstring for json_writer
    
    Added to the docstring for the function
    json_writer about what the function will do when
    the 'file_state' parameter passed through is '2'.
    
    Previously, it was meant to append but that's not
    possible anymore. Read the docstring to learn the
    current way the function will operate. Need to
    actually code in the changes.

commit f50b6af44c747fe45ccbb964743d185180ce3e36
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 18:56:25 2023 -0400

    Updated the function test_create_json_data_false
    
    Updated the function test_create_json_data_false
    to follow the same flow and use the same variables
    as the other test functions. After confirming it
    works properly the function was renamed to start
    with 'fntest'. It was also moved to be with the
    other 'fntest' functions.

commit 937107068060c810f734602c47fb58cc3e8ff848
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 18:45:13 2023 -0400

    Updated fntest_json_creator and rewrote JSON data
    for unittest_data.json
    
    Refactored fntest_json_creator slightly to use
    self.TEST_FILE when confirming that the JSON data
    was written successfully. This is because in the
    first part of the test function, when calling
    json_creator from startup_data_editor.py, the
    self.TEST variables were passed in. This also
    caused the default JSON data, found in
    self.EXAMPLE_JSON, to be written to
    unittest_data.json.

commit 57f30bff8b6572e45a42339185c6d3c287929409
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 18:41:42 2023 -0400

    Refactored the fntest functions in test.py
    
    Refactored the functions fntest_parse_full_path,
    fntest_generate_default, and
    fntest_create_json_data_true to use the
    return_value variable for the self.assertEqual
    call and also to use the self.TEST variables when
    possible with the exception of using the
    self.EXAMPLE_JSON JSON data when needed.

commit 9dbe26a725483679b76ee039983923c794a7e130
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 18:25:50 2023 -0400

    Correct two docstrings in startup_data_editor.py
    
    In the docstrings for the functions 'json_writer'
    and 'json_creator' in startup_data_editor.py, the
    return value message was incorrectly saying a
    blank string if the function was successful.
    Corrected both to what the actual return message
    is when the function is successful.

commit b6a83a74f06b87b79026c748015e0f9df3269670
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 18:23:30 2023 -0400

    Updated the function test_json_creator
    
    Updated the function test_json_creator to follow
    the same flow and use the same variables as the
    other test functions. After confirming it works
    properly the function was renamed to start with
    'fntest'. It was also moved to be with the other
    'fntest' functions.

commit 25bd747f2faa4f93706d22a5d816e6e45922cb15
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 17:50:25 2023 -0400

    Updated the function
    test_json_reader_valid_file
    
    Updated the function
    test_json_reader_valid_file to follow the same
    flow and use the same variables as the other test
    functions. After confirming it works properly the
    function was renamed to start with 'fntest' and
    moved to be with all the other 'fntest' functions.

commit ce31cb2bf082df942b47f44738c17edf420aeb90
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Sep 1 17:40:59 2023 -0400

    Rearranged order of test functions to keep all fntest together before all notest and the one untest at the end

commit d27628ae60e33ca0fc679e357d19a2175fb5b8c1
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 19:09:47 2023 -0400

    Updated the function
    test_json_reader_wrong_file_extension
    
    Updated the function
    test_json_reader_wrong_file_extension to follow
    the same flow and use the same variables as the
    other test functions. After confirming it works
    properly the function was renamed to start with
    'fntest'.

commit a370beb0d985f871bae03a18ca610890ff9163be
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 18:51:51 2023 -0400

    Updated the function
    test_json_reader_no_file_extension
    
    Updated the function
    test_json_reader_no_file_extension to follow the
    same flow and use the same variables as the other
    test functions. After confirming it works properly
    the function was renamed to start with 'fntest'.

commit f354925b4991c98792eaf491a4b23923ac94227c
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 18:49:14 2023 -0400

    Updated two expected_messages
    
    Updated the formatting for the
    self.expected_messages string for the test
    functions test_parse_full_path and
    test_json_writer_case_zero.

commit 3a9586a85b21a43b6f1eee35fb15d63da23db119
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 18:34:02 2023 -0400

    Fixed minor typo in string literal sequence

commit b7679a3a3ca8b09b8e47b2d6961134a735d47d1c
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 18:26:50 2023 -0400

    Renamed the test_json_writer_case_two function
    
    As mentioned in the previous commit, the current
    way the 'appending' or updating of existing JSON
    data to the JSON file doesn't work. As a result,
    removed all the code from the
    test_json_writer_case_two function and replaced it
    with the printed statement about skipping that
    test. Also updated the function name to start with
    'notest'. Finally, went through all the test
    functions and made sure the 5 functions currently
    "skipping" a test start with 'notest'.

commit 7c0bab255078daa95552ccf89ea3b8d9ed7f09e2
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 18:12:06 2023 -0400

    Worked on function test_json_writer_case_two
    
    Rewrote code for test_json_writer_case_two to
    read back in the file after being appended to and
    compare the data. Used self.TEST_FILE as the data
    file and wrote self.EXAMPLE_JSON as the append
    data.
    
    Initially, kept running into errors when reading
    back the data despite the test call to function
    json_writer in startup_editor.py with a file_state
    of 2 to indicate append returning True.
    
    Tried to compensate by erasing the data file and
    writing into it from scratch, similar to calling
    test_json_writer_case_zero, and then proceeding.
    Tried also debugging but got the same results.
    
    Finally, ran an interactive Python shell for just
    startup_editor.py and found out the issue is that
    in json_writer, the attempt to call json.dump with
    the data file open for append results in an error.
    There's something about how the data is first
    written that adds an EOF marker and when trying to
    append, calling json.dump again just results in
    the new data being written after the EOF marker.
    
    However, when running the test function, none of
    that error information from the json.dump function
    is received.
    
    Committing all this code to history for posterity,
    but will need to rewrite the "append" aspect to
    what it really should be: code that reads in the
    current data from the JSON file and updates the
    dictionary programmatically and then writes it
    back. This is because even using the built-in
    dictionary method update doesn't work since the
    keys are the same. To see an example, run
    from the test.py file the command
    "EXAMPLE_TEST.update(EXAMPLE_JSON)". This will
    cause all of the data in EXAMPLE_TEST to be
    overwritten completely with the data in
    EXAMPLE_JSON.

commit dce106b82ed02fb020e966e8bc883cc1117a7746
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 31 15:52:31 2023 -0400

    Rearranged ordering of functions
    
    Rearranged test functions so all the 'fntest'
    functions are right under the setupClass function,
    the 'notest' functions are next and the 'untest'
    functions are last.

commit 0c67e1f835d7afc1cb9a3e73527079e70ed5c98f
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 18:57:14 2023 -0400

    Renamed test_json_writer_case_zero to have fntest at the beginning

commit c359ec6f5b92f316aa9b8993fbe81daa4311fe6d
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 18:50:25 2023 -0400

    Updated the test_json_writer_case_zero function
    
    Rearranged the existing code to create more space
    between the lines. Also added new code to first
    check if the file that was supposed to have been
    created actually exists. Next, the code reads back
    in the JSON data from that file and compares it to
    what should have been written to confirm. If
    either check fails, an error message is printed.

commit 1e3ad56ebac9912020467a482fdea23c8bd14806
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 18:38:14 2023 -0400

    Rearranged some code lines in the finished test
    functions so the code is more spaced out and
    easier to read

commit 863e441f78399d675d311b8a71b5ce0a74bc38d7
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 16:21:57 2023 -0400

    Made some test function name changes
    
    Renamed the 3 test functions confirmed working
    from commits 23f3a4e, f0dc796, and 6acd89d to
    fntest as the beginning part of the function name
    per details from commit 99a8b25.
    
    Also decided to rename the test functions that
    aren't yet filled in to notest for the beginning
    part of the function name.
    
    Finally, changed the function
    test_create_json_data_false to notest and removed
    all the code in it except a print statement
    saying this test is being skipped. This is because
    the function create_json_data from
    startup_data_editor.py isn't implemented to take
    a value of False when passed in.

commit 632b9101ba0b5f458fb6e14577fb1f9b529823d1
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 16:17:33 2023 -0400

    Updated variable names in the test functions
    
    Changed all instances of expected_message to
    self.expected_message in the rest of the test
    functions not covered in the last 3 commits.

commit 23f3a4eda6d4eb80587b98aeb4d96eff028d1d3a
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 16:15:08 2023 -0400

    Updated the test_create_json_data_true function
    
    Updated the function to use the new self.TEST
    variables and to print to screen the two values
    being tested in the self.assertEqual function.

commit f0dc796e54590345532836e747dc648628f74788
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 15:27:34 2023 -0400

    Updated the test_generate_default function
    
    Updated the function to use the new self.TEST
    variables and to print to screen the two values
    being tested in the self.assertEqual function.

commit 6acd89d69f1d25698df317b3bf3d47f2f5966844
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 15:25:43 2023 -0400

    Updated test_parse_full_path function
    
    Updated the function to use the new self.TEST
    variables and also kept in the code to print to
    screen the two things being tested in the
    self.assertEqual function.

commit 6fa5a18fb083302cbf9418cc25dc8f8a44674a7d
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 14:02:29 2023 -0400

    Added some class non-constant variables
    
    Created the following variables:
    
    cls.expected_message, cls.sde_func_str_return,
    cls.sde_func_tpl_return, cls.sde_func_dict_return
    
    The first variable will be for each test function
    to use and print if the test fails. As the
    variable name implies, it will store the expected
    value for the test function.
    
    The last three variables will be used by each test
    function to store the return values of the call to
    the startup_data_editor.py function that is being
    tested. This way, the return values can be printed
    if desired and it also makes for cleaner code in
    the self.assertEqual function calls.

commit 6e22d2974f7ab84099385a6c43eb9aeb460c3c11
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 30 13:58:26 2023 -0400

    Adjusted class constant variables
    
    Created cls.TEST constants equivalent to the
    cls.JSON variables as mentioned in the previous
    commit. Rearranged the set of cls.JSON variables
    to be together and the set of cls.TEST variables
    to be together.
    
    Also changed cls.EXAMPLE_TEST to follow the
    startup data JSON schema but added 2 items:
    
    1. Calculator
    2. Dealer-FX homepage in a new Chrome window

commit 46bde7eb829041eb534c78009240063b1e52a9d3
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 29 18:44:19 2023 -0400

    Renaming of variable and test function
    
    Renamed the variable cls.TEST_DICT to
    cls.EXAMPLE_TEST. The plan is to create a second
    set of variables starting with cls.TEST equivalent
    to the cls.JSON variables. These can be used to
    help with testing.
    
    Also renamed the 'test_parse_full_path' function
    to 'fntest_parse_full_path'. For now, the
    nomenclature will be to use 'untest' for the test
    functions that I haven't gone through one by one
    to confirm the test itself is properly working.
    When I'm working on a test function, I will remove
    the 'un' part, and when I'm done confirming the
    test function works, I'll add 'fn'.

commit 0db728552548e920ea8456d3e85be4e102b319b8
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 29 17:26:36 2023 -0400

    Readded the print statments mentioned in the last commit

commit ba07ef4e04c3abeafb11b363708e8cc5b075cabf
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 29 17:22:19 2023 -0400

    Confirmed that the first test function is
    correctly working
    
    Copied over the same code from parse_full_path to
    generate the variable cls.JSON_FILE. Confirmed
    the test function is working correctly by printing
    both cls.JSON_FILE and the results of calling the
    parse_full_path function.

commit 99a8b257c99a8611d0dc9b541ada4371b94b8441
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 29 17:12:21 2023 -0400

    Renamed all test functions to 'untest' except parse_full_path with the idea to work on each test function one at a time

commit ac1524fa7484ce41efa2918a15ae3e8d8e90e3e6
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 29 01:14:10 2023 -0400

    Changes to test function
    'test_json_writer_case_two'
    
    Realized that the test function
    'test_json_writer_case_two' was returning passed
    but wasn't actually appending to the
    test_data.json file.
    
    First ran a manual test of
    startup_data_editor.py and passed in a new random
    dictionary I created. Confirmed that the function
    'json_writer' in startup_data_editor.py, when
    called with the parameter 'file_state' as 2, does
    append the passed in dictionary data to
    test_data.json as it should.
    
    Next, created the same random dictionary in
    test.py and called it TEST_DICT. Passed that in
    to the 'test_json_writer_case_two' function and
    confirmed that test_data.json isn't actually
    updated although the function 'json_writer'
    returns True. Ran a debug session and all the
    variables seem to be handled correctly. However,
    the code on line 217 of startup_data_editor.py -
    json.dump(json_data, file) - doesn't return an
    error but also doesn't do any actual writing.
    
    Will need to investigate this more. May need to
    have the test.py test functions call some of the
    helper functions in startup_data_editor.py such as
    'parse_full_path' to get the path for
    test_data.json instead of hard coding it into
    test.py as a variable. There shouldn't be any
    issues since no FileNotFound error is returned,
    but just in case, will test with a little hard
    coding as possible.

commit 9d3bc136f2619e632c18222cecea461da9b8fb6e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 29 00:54:01 2023 -0400

    Updated path references for test_data.json
    
    In both startup_data_editor.py and test.py,
    updated the relative path references to
    test_data.json since now both scripts can be run
    from the CompStart root folder. Will need to
    make sure to always run either two scripts from
    the CompStart root folder so that the relative
    references will work.

commit 0f9744a397d3f11677038e36d7c84659536b7f1d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 29 00:44:13 2023 -0400

    Put back some directory structure changes
    
    Due to difficulty with running test.py and
    startup_data_editor.py from changes made in commit
    cc19cf8, decided to revert some of the changes.
    However, didn't want to use git revert since
    commits had been made after cc19cf8.
    
    Instead, moved both test.py and
    startup_data_editor.py back to feature branch root
    folder, feature_addons/startup_data_modifier_tool.
    Kept enum_classes.py and test_data.json in the
    subfolder 'program_files'.
    
    Also removed the __init__.py from the feature
    branch root folder. Modified
    startup_data_editor.py to import from
    program_files.enum_classes which now works.
    Deleted refactored code changes made in commit
    85a6ba0 in the import statements section.
    
    Finally, also decided to remove json_requests.py
    and the subfolder 'python_module_examples' since
    it's not necessary any longer for this feature
    branch.

commit 88539abf9636927a4e2de1fb57973251ad9608cb
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 25 18:41:44 2023 -0400

    Removed the "Passed!" message being printed after
    each test

commit 673297b27c8857c5ffed6e35289aaf52474c6cc2
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 25 18:40:56 2023 -0400

    Added a new line before exist message

commit 85a6ba03780835a9d23523795af8242f88dc5274
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 25 18:38:56 2023 -0400

    Refactored code to match changes made in commit
    cc19cf8
    
    Due to directory structure changes made in commit
    cc19cf8 as well the creation of a package and
    module structure, several places in both test.py
    and startup_data_editor.py had to be changed to
    reflect these changes.

commit 80f59fea1eb80e905934f60cebeb5dd2cddd4a73
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 25 18:35:27 2023 -0400

    Updated code to reflect changes to JSON Schema
    
    Updated enum_classes.py and startup_data_editor.py
    to use the JSON key "Description" instead of
    "Comments". Rewrote the test_data.json file with
    the new JSON keys.

commit cc19cf853e95284ec4b71d39ab77287e02231beb
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 25 15:42:27 2023 -0400

    Changed directory structure of feature branch
    and created Python package/module structure
    
    Created subfolders called "program_files" and
    "test_files" from the feature branch root folder.
    Moved test.py to the test_files folder and
    everything else to the program_files folder.
    
    Also created blank __init__.py files in the
    feature branch root folder and the two subfolders
    so create a Python package and module structure.

commit 1f8f685459b16bbcdc0bffdef8f8dd07758c0e47
Merge: cfec13d b1b749c
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:39:09 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit b1b749c56d85a9c7ca9af99285dc3c8ad336bfa8
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:37:03 2023 -0400

    Renumbered the current branches in feature_addons/README.md

commit 39ef917c2a4d82eb78189b1250c8531abd71ec3f
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:34:43 2023 -0400

    Updated the README.md file in feature_addons
    
    Updated the feature_addons/README.md file to
    reflect the new name of the
    startup_data_modifier_tool feature branch as well
    as to move the features/json_schema_update branch
    from current branches to past branches.

commit e9547c97ac9e2b235a84368f79992ec8c9ca034f
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:28:48 2023 -0400

    Moved and merged all files from feature branch
    features/json_schema_update to root
    
    Moved or merged all files from the feature branch
    features/json_schema_update root folder of
    feature_addons/json_schema_update to CompStart
    root folder. Specifically, merged startup.ps1 and
    startup_data.schema.json. Finally, moved
    extra_info.txt to the data/misc_data folder and
    renamed it to json_schema_update_ideas.txt.

commit 118eb487eb006ffbaf6dcb560f7d4b216f7e85f8
Merge: 44baaab 9c8b0d1
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:20:31 2023 -0400

    Merge pull request #1 from dEhiN/features/json_schema_update

commit 9c8b0d123ce2b410a802d3c58d2f23bee4a32603
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:16:51 2023 -0400

    Made changes to all 3 JSON files in data/json_data
    
    Renamed all instances of the "Comments" key to
    "Description" in startup_data.json, test_data.json
    and startup_data.schema.json.

commit 0edffeaba49361314ea30e9fcc41dbc6068d3696
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:12:04 2023 -0400

    Updated startup_data.schema.json
    
    Added a few "default" schema keys as well as
    updated the "examples" schema value to reflect
    recent changes to the schema itself. The example
    now contains a "Name" and "Description". Finally,
    updated the values for one of the "required"
    schema keys to make sure it also had "Name" and
    "Description".

commit 25a08c748dba49a9e0fd8c6815668f10b02fd17f
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 19:08:33 2023 -0400

    Expanded the description of the schema
    
    Expanded and finished the schema description to
    explain all the keys and how they work together.
    Realized I can't add multiple "description" schema
    keys, so used just the one. Also updated
    ideas.txt.

commit 67f322dee9f3137b2ba09c32a7d38b3cac044afc
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 18:09:52 2023 -0400

    Several changes
    
    Updated ideas.txt to enclose the idea(s) I've
    implemented in square brackets with the word
    "Done" in front, and the ones I still need to
    add with curly brackets with the words "To Do" in
    front.
    
    Also, updated both startup_data.schema.json and
    startup.ps1 to use "Description" instead of
    "Comments" per a suggestion in ideas.txt.
    
    As a result, there are only now 2 suggestions from
    ideas.txt that need to be implemented - to add the
    JSON schema key "description" to each JSON
    parameter with a description of what each
    parameter is or means; and to use the parameters
    "Name" and "Description" in the Python program to
    edit the JSON startup data.

commit 5a970281e35714baa4eb81ae2d1c980c30955c3d
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 18:03:11 2023 -0400

    Updated feature branch copy of startup.ps1
    
    Added variable to function Get-StartupItem to get
    the JSON parameter Item for each startup item.
    Currently nothing is being done with it.
    
    Also uncommented line in Get-StartupItem to get
    the JSON parameter Comments. Nothing is also being
    done with that parameter at this time.

commit 2b6f96d2644e3054258387a58bcf33d22605a4ce
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 24 17:59:38 2023 -0400

    Made local copy of startup.ps1 in feature branch folder

commit cfec13dbc22c4a2d48a92e83444a4d1f64c284a0
Merge: cde5891 44baaab
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 23 23:16:40 2023 -0400

    Merge branch 'main' into features/startup_data_modifier_tool

commit be95ab8d5fffca10f7a521ced9d5d0f84f47eb93
Merge: f1aec23 44baaab
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 23 23:15:26 2023 -0400

    Merge branch 'main' into features/json_schema_update

commit 44baaaba52628a53b0d7b776b93a31fc12920e68
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 23 23:12:02 2023 -0400

    Two changes to directory structure
    
    Deleted the installer_files/CompStart.bat file
    because of changes I'm making in the
    features/powershell_installer branch. Will be
    removing the installer_files folder altogether for
    now.
    
    Also renamed data/old_data/setup.bat to
    old_setup.bat to match
    data/old_data/old_startup.ps1.

commit cde58911ff2be36e4bcbb565b7166d36542a6dcc
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 23 18:38:56 2023 -0400

    Deleted test_data.json.orig and minor formatting
    change to test_data.json

commit 7292d2396c753b68a4fe6497dfdb8286898ec168
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 22 23:44:40 2023 -0400

    Changed code in function json_creator to test if
    the JSON file exists
    
    Was previously using a simple if json_file where
    json_file was a string variable containing the
    full absolute path to the JSON file. While
    attempting to test the creation of new file by
    renaming the existing test_data.json to
    test_data.json.orig, discovered that the if
    statement doesn't work.
    
    Refactored that code to use the os.path.isfile
    function to properly test if the file exists or
    not. This passed the test of renaming
    test_data.json to test_data.json.orig. Adding both
    test_data.json and test_data.json.orig as well.

commit e118415769d99b122c78533c29bb4eb9a48ead48
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 22 23:35:14 2023 -0400

    Updated startupdata references to startup_data
    except for the class name

commit 49338d8fcbedcf3e1568af31ec1991b475d1e848
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 22 23:32:20 2023 -0400

    Applied formatting to test_data.json and changed
    placement of blank print line

commit 7c27e83d7ea04a2f5a33f4c744799aa4981678d4
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 18:38:01 2023 -0400

    Added program exit message to user and updated
    location of JSON file when testing to reflect
    feature branch name change

commit f53886d02242d022db5113bbb2c3a2af5804e741
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 14:49:41 2023 -0400

    Replicated the change made in commit f1b6664 for
    json_writer
    
    In commit f1b6664, changed the return_message in
    json_reader for when an Exception is raised.
    Replicated the same change for json_writer. Also
    added a comment to describe the call to
    check_overwrite.

commit efea4f2e0676f8256159b87a42d8735bec7ffe10
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 14:45:02 2023 -0400

    Refactored code for json_writer
    
    Created new variable called file_mode and use that
    in the match block setting it to "w" or "a". As a
    result, took out the try-except block to write the
    actual JSON data from the match block and put it
    underneath on its own. Set the file_mode variable
    to default of a blank string and use that for the
    base case in the match block. See diff for
    details.

commit 888708f80a599e44d643304b433de4bf1ba74786
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 14:43:08 2023 -0400

    Updated a comment line in json_creator to better
    reflect the purpose of the code underneath the
    comment

commit f1b6664f7da68276a19fad2bd4057aacaf5eed0d
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 14:22:13 2023 -0400

    Refactored code in json_reader
    
    Realized that when an Exception is caught, the
    return_message variable was returning as a tuple.
    Changed it so it would be one big string with
    each component part attached using concat and
    casting to string the name of the error and the
    error itself.

commit 7a1089b27aaf5a075a738a982aa097598fee0c79
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 14:19:18 2023 -0400

    Refactored code in main loop
    
    Created a new variable called status_state and use
    that for the return statuses of the calls to
    json_creator and json_reader. Took out the print
    status_message statement from the if-block for
    user's input and put it underneath that block.
    Also added code to only print status_message when
    the user hasn't selected to quit the program.

commit da7114c6c048052a090e8a0d970eb06211b46c8f
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 13:46:22 2023 -0400

    Deleted asserttest.py as it's not longer needed

commit 44a9992e293cd4df172834b333a3a7059077e131
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 12:32:50 2023 -0400

    Renamed feature branch startupdata_modifier_tool
    
    Renamed feature branch startupdata_modifier_tool
    to startup_data_modifier_tool. Also renamed
    startupdata_editor.py to startup_data_editor.py.

commit a761e484c3c7ec7237cf800d7837849f48d23850
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 12:18:14 2023 -0400

    Readded print statements to end of each test to
    mention the test passed

commit 6871da76e30a98825b7254c9c2e9bf169310c4ba
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 22 12:15:37 2023 -0400

    Updated tests in test.py to reflect changes made
    in commit 302ec53

commit 302ec5352f581f9fa97790ab8dd54acf4b99dd66
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 22 01:07:05 2023 -0400

    Refactored code for writing JSON data
    
    In the json_writer function, moved the return
    message that JSON file was written successfully
    to here and made it the default message. Also,
    added a return message when the file already
    exists and the user chooses not to overwrite it.
    
    In the json_creator function, renamed the
    status_message variable to return_message to put
    it in line with all the other functions that
    return a message. Created a file_state variable
    and refactored the if-block to only check if the
    JSON file exists. If so, the file_state variable
    is set to 1 but it has a default of 0. Also moved
    called create_json_data to outside the if block.
    Finally, moved calling json_writer to outside the
    if block and pass in file_state instead of a hard
    coded value. This ensures that json_writer is the
    only place where check_overwrite is called when
    file_state is 1.
    
    In json_reader, added a default return message of
    the data read being successful. Finally, in the
    main loop, set it to print the return or status
    message and also print the JSON data when
    returning from json_reader and the read was
    successful. This was done for testing purposes.

commit b70ed79efeddf02e344737d44dba1d894a675438
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 18:51:53 2023 -0400

    Minor change to correct a print statement

commit 2117892bab20281555401ac54edb2f0ac886d9df
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 18:47:33 2023 -0400

    Added skeletons for testing the rest of the
    functions in startupdata_editor.py
    
    Created skeleted def statements along with a
    print statement saying "Skipping" and the function
    name for the following functions:
    
    - check_overwrite
    
    - generate_json
    
    - json_writer with the parameter 'file_state' set
    to 1
    
    - json_creator

commit d2eec1897dc70a7225efa92ad3bcbda0a7a6ba31
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 18:35:32 2023 -0400

    Made several changes to the function json_creator
    
    Added in a return statement to return whether the
    file was written successfully or not. Created two
    variables at the beginning of the function and
    initialized them with values. Also, updated the
    function docstring.
    
    Finally, added an explicit dict conversion to the
    output of the create_json_data function call to
    satisfy an error from Pylance and removed the
    comment # type: ignore.

commit 49867e3ee5142d9eaacd6262afe8b082e13acc71
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 18:11:47 2023 -0400

    Minor changes to the docstring for function
    json_writer

commit ca1e0bfbb110abe45a384de1dae6d008fd3fbb2a
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 17:38:12 2023 -0400

    Added 3 tests for the function json_reader
    
    One test is when the filename passed in has no
    extension, the second is for when the extension is
    wrong, and the last is for a valid JSON file.

commit b5849ff23150ba1c99e379316fed0aedf4cd8448
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 17:20:05 2023 -0400

    Minor change to function json_writer
    
    Changed the IOWrapper variable used in all the
    with open blocks to file to distinguish from
    json_file. This satisfied Pylance and was able to
    remove the commented line # type: ignore.

commit cd88272065c58c5411bc9fecd558b486267ef269
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 16:17:05 2023 -0400

    Added test of create_json_data with parameter
    'default' set to False
    
    Updated the generate_json function in
    startupdata_editor.py to return a blank dictionary
    for now and in the test, set it to check against a
    blank dictionary.

commit 7ae0d13ed3b3fab369000a249d32b94e94943ffc
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 16:14:14 2023 -0400

    Minor change to output of each test
    
    Changed the print statement after each assert
    function to just say "Passed!" instead of
    repeating the function name.

commit 4e1cf705115bcf500f0614c009b6aef483ac79fa
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 21 16:01:05 2023 -0400

    Minor changes to test.py  and
    startupdata_editor.py
    
    Made some minor changes based on Pylance or
    IntelliSense suggestions including using cls
    instead of self in test.py for the class method.

commit 9d5503103cd9d0b40679eba648e6dcf783e23a16
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 21 00:24:43 2023 -0400

    Updated json_creator to write the file to disk
    
    Added code to call the json_writer function. Also
    added an if-block to only create the JSON data and
    write it to disk if the file doesn't already exist
    or, if it does, if the user is ok to overwrite it.

commit 008f331bac08c045a5b5a4537256ab65937e0fb7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 23:56:55 2023 -0400

    Made updates to reflect commit f1aec23 on feature
    branch features/json_schema_update
    
    On commit f1aec23 for feature branch
    features/json_schema_update, a new property was
    added to the startup_data.json schema called
    "Name". It comes right after "ItemNumber" and
    before "FilePath".
    
    The Enum class JsonKeySchema was updated to
    reflect that as well as the code in
    startupdata_editor.py in all the places that
    needed to be updated. Lastly, test_data.json
    within this feature branch was updated to reflect
    the new schema.

commit f1aec23f48d7541ae0e3e72585870daff40b5153
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 23:49:37 2023 -0400

    Added new property to schema
    
    Added "Name" property to properties list for each
    object in the "Items" array. Made this property
    required like the rest. Also updated both
    test_data.json and startup_data.json for this
    change.

commit 6e9403ab04fc02344c8ac80b0f250d3cdb54c90f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 19:54:25 2023 -0400

    Updated test.py to have the same 5 tests as
    asserttest.py
    
    Test.py now tests the following:
    
    - parse_full_path
    
    - generate_default
    
    - create_json_data with the 'default' parameter
    set to True
    
    - json_writer with the 'file_state' parameter set
    to 0
    
    - json_writer with the 'file_state' parameter set
    to 2
    
    Each test also prints out what is being tested
    before running the test and then the result of it
    after.

commit 8c8989fec27a094954915d6e99c6c78c6eb5f9ed
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 19:38:31 2023 -0400

    Minor updates to asserttest.py
    
    Forgot to add == for assert statements for last
    two unit tests. Added them in.

commit 7f1ebabcc3ad98c5112356295442d6b85c39b1f0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 19:01:25 2023 -0400

    Created new test.py file using unittest and added
    skeletal structure

commit f4a33ae66028943c1a949809f2be2b770b3be5ac
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 18:58:23 2023 -0400

    Renamed test.py to asserttest.py in order to
    create an new test file using unittest

commit 262cf83e43515d2cc7ba88c29c9c45e156925c20
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 18:13:17 2023 -0400

    Added 4 more tests
    
    Added unit tests for the following functions:
    
    - generate_default
    
    - create_json_data with the parameter 'default'
    set to True
    
    - json_writer with the parameter 'file_state' set
    to 0
    
    - json_writer with the parameter 'file_state' set
    to 2

commit fb11bfa8ad67e1f0a0865dc33b98fb6230b98d8d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 17:38:04 2023 -0400

    Refactored code to make it more reusable in
    test.py
    
    Added a new global variable to contain the full
    absolute path to the test_data.json file.
    Refactored the code in the first unit test to
    use this global variable to compare against.

commit c3efe16356bb6b1bebcad6afb9c0a7edd3c8382f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 17:32:05 2023 -0400

    Created test.py for unit testing
    
    Created test.py to perform unit testing of
    startup_editor.py. Each unit test will be a new
    function in test.py. Using global variables and
    local function variables along with build-in
    assert statement to test output of each function
    in startup_editor.py that needs testing.
    
    Defined first test for function parse_full_path
    with messages for when test fails and when it
    passes.

commit 23bf02f4490f32fa3396f77f565b60cf711469b3
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 17:04:04 2023 -0400

    Revert "Created code subfolder in feature branch
    folder"
    
    This reverts commit
    50bf88df47bfbb22a26468371fd037d84c8936ba to make
    testing easier.

commit 50bf88df47bfbb22a26468371fd037d84c8936ba
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 16:49:44 2023 -0400

    Created code subfolder in feature branch folder
    and moved enum_classes.py, startupdata_editor.py,
    and test_data.json to this subfolder

commit 12657b3d1742240686082a890e848b3823208957
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 16:31:23 2023 -0400

    Manually tested new functions and made minor
    changes
    
    Manually tested the following functions:
    
    - parse_full_path
    - generate_default
    - create_json_data
    - json_writer
    - check_overwrite
    
    That resulted in the creation of test_data.json in
    the feature branch folder. Also, made minor
    changes to check_overwrite in how it display the
    input message to the user.

commit 6b1e1e162d9009f9f0def8e699ab798987141357
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 13:06:07 2023 -0400

    Added an idea.txt file to the feature branch to
    store ideas for next steps

commit 3f58da8b6c3496e0c91908ee0ba1f4d78e0e5e4c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 12:59:29 2023 -0400

    Major changes startup_data.schema.json and minor
    changes to extra_info.txt
    
    Added to new validation attempts to extra_info.txt
    based on changes made to startup_data.schema.json.
    
    For the schema, added a title and description key
    just under the $schema key. Added a default key to
    the ArgumentList parameter as well as a required
    key to both the object within the Items array and
    the root object. The two required keys both say
    that all parameters are required. Also added a
    uniqueItems key to the Items array, so all objects
    with that array will need to be unique.

commit ac469788f22647ac68b86e8f213e1a00f10a7ea0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 20 12:30:08 2023 -0400

    Updated both json files to reflect that when
    ArgumentCount is 0, ArgumentList should be an
    empty list and not a missing key

commit 35c81479b61da74ee3ad5dad06d86383f1f20f0f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 20:22:45 2023 -0400

    Finished json_writer match-case block
    
    Added in code for the match-case block in the
    function json_writer. Specifically, filled in case
    "1" which is when the file exists but needs to be
    overwritten.
    
    Created helper function check_overwrite to loop
    through and check with the user if it's ok to
    overwrite the file first.

commit a1aeed620eb36346487a4954eecbb481d3806d6c
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 20:03:26 2023 -0400

    Minor syntax changes to the return messages
    
    The code governing the 3 instances of
    return_message - once in json_reader and twice in
    json_writer - had incorrect syntax. Fixed the
    issue.

commit 5fe9fa9f74abe4e3dec61ce1001aa5383ae97247
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 19:56:55 2023 -0400

    Updated try-except block in function json_reader
    
    Updated the except block to give a fuller return
    message complete with the Exception information.

commit 34f9a0c4feaa16a4590e64d3c37aee86af3c3668
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 19:54:36 2023 -0400

    Created function json_writer to write the actual
    JSON data to disk

commit 9d69a304a19c72e46e7f94e418669a263d9691b7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 19:22:09 2023 -0400

    Made changes to the location of the JSON data
    files for prod and testing.
    
    Updated the if-block in main to set both json_path
    and json_filename based on isProd. Deleted the
    file temp.json in the feature branch folder and
    set the json_path to be the feature branch folder.

commit 1f50536a6ccb8877c496a799452f51a7790e131d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 19:00:44 2023 -0400

    Fleshed out comments and minor updates to return
    statements
    
    Added more to the generate_default function
    docstring to list out what the default JSON
    startup data actually is. Also added a docstring
    comment above the code that populates json_data to
    explain in detail what the code is doing.
    
    Finally, added a return statement for the
    generate_default function and two print statements
    to the create_json_data function to confirm the
    code is running correctly.

commit 4bcef90461ae2292f0529bf6dc40b112462ce3f6
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 17:23:34 2023 -0400

    Updated EXAMPLE_JSON to have the ArgumentsList key

commit 217665dcebc17096005603a1a24fcb3488dde9c0
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 17:14:58 2023 -0400

    Filled out all the code for the generate_default
    function
    
    Used the two Enum classes and their members to
    create a basic startup JSON object consisting of
    1 item, to open notepad. Used
    startup_data.schema.json as a guide and populated
    the json_data dict.
    
    Along the way, realized that because dicts and
    lists are mutable, when adding them to json_data,
    need to copy the members from the Enum class
    JsonSchemaStructure using their values. For
    example, JsonSchemaStructure.ARRAY.value.copy().

commit 8f445cb11f9cabe1f4d686e2d7c7c1b30ffcd8fe
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 16:58:22 2023 -0400

    Moved the creation of the empty json_data dict
    from the create_json_data function
    
    Removed the creation of the empty json_data dict
    from the create_json_data function to the two
    helper functions, generate_default and
    generate_json.
    
    Updated the helper function
    parameters lists, docstrings and the calls to them
    from the create_json_data function.
    
    This will keep all actual JSON data creation work
    contained within the helper functions.

commit 9ae15ed4d9c52cbb66317d6bb2c633e4afbf2156
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 16:50:51 2023 -0400

    Updated create_json_data function to return
    the JSON data
    
    Updated the function docstring to show a return
    variable of type dict. Also added return json_data
    to the end of the function.

commit 6203d12d2396dabf7010aa71d49a1ab087ba274d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 16:49:47 2023 -0400

    Added code to bypass user question when testing
    using the isProd variable

commit eb545335514cd3e127b287f79fc574f011962bba
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 19 16:47:57 2023 -0400

    Updated both startup_data.json and test_data.json
    
    Decided to make ArgumentList mandatory and just
    have an empty array when ArgumentCount is 0.
    Adjusted both JSON files to reflect this change.

commit 18be476c802c52fe97c361d704a846a42a652f4f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Aug 18 19:45:06 2023 -0400

    Created two new functions to help with creating
    the JSON data and updated the create_json_data
    function
    
    Updated the create_json_data function docstring to
    specify what the function does and the arguments
    it takes. Created two helper function for actually
    generating the JSON data, generate_default and
    generate_json.
    
    The first one will create the
    default initial JSON startup data for a new
    startup_data.json file. The second will be used
    when editing an existing file to update it.
    
    Filled out the docstring for both helper functions
    and added logic to create_json_data to determine
    which helper function to call.

commit aef23f18ba8e2efe0eec7034a64f665cb7e7db07
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 18:35:14 2023 -0400

    Created function create_json_data
    
    Started creation of the create_json_data function.
    As mentioned in commit 2b16cb3, the parameters for
    this function are a mandatory parameter called
    "default" which is a boolean and **kwargs.

commit 2b16cb3bbcb33b77584f1b5802071badaa558da5
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 18:32:26 2023 -0400

    Added some comments and called new function to
    create JSON data
    
    The new function is called create_json_data and
    will take one mandatory boolean parameter called
    "default". If true, the function will create some
    default JSON data for a new startup_data.json
    file. If false, the function will also accept
    **kwargs to allow for any edited JSON data to be
    passed in.

commit 69d696428d11c01374f606f34a313cd29d3d4b1f
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 18:21:49 2023 -0400

    Changed importing of enum classes
    
    Updated the import statements for the JsonSchema
    enum classes to import both classes as the
    variables ec_jsk and ec_jss, which stand for
    "enumclass_jsonschemakey" and
    "enumclass_jsonschemastructure". This will make
    it easier to reference those classes in the code.

commit b662985aeee84a64751d40071f5f2c24abb5c4b1
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 17:28:37 2023 -0400

    Moved the enum classes to their own module called
    enum_classes.py

commit a9075f9098c823f1c79ac777cc09d8161c43708d
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 16:59:51 2023 -0400

    Renamed JsonSchema enum class and created new
    enum class
    
    Renamed JsonSchema to JsonSchemaKeys because that
    enum class just contains the valid keys that can
    be used for startup_data.json.
    
    Create new enum class called JsonSchemaStructure
    with two members: OBJECT and ARRAY. OBJECT is a
    dictionary and ARRAY is a list. This can be used
    to generate the structure of the startup_data.json
    JSON data.

commit ec78202b98e341a7f4daba26c88cf3c104a93060
Author: David <hiranwatson@gmail.com>
Date:   Fri Aug 18 16:58:31 2023 -0400

    Added members section to docstring for Enum class
    
    In docstring for JsonSchema enum class, added a
    members section to describe the class members.

commit e1f2b38063bb87b5976c20e3336ff857e67e727b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 17 23:55:42 2023 -0400

    Changed EXAMPLE_JSON variable and wrote it back to
    a JSON file
    
    Played around with the functions json.dump and
    json.dumps to understand the differences between
    writing JSON data as a string to a file versus not
    as a string. Realized it's better to not make it a
    string but use Python's data types of dictionary
    and lists which the dump function will convert
    automatically to a JSON object and array.
    
    Changed EXAMPLE_JSON so instead of a string, it is
    now a dictionary containing all the JSON data from
    test_data.json. Also tested writing that back to a
    file called temp.json to confirm the data is
    written correctly.

commit 672a1de675148aa97fb421e97be9184658c970e6
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 17 23:35:59 2023 -0400

    Created an Enum class to help with generating
    the necessary JSON startup data
    
    Created an Enum class called JsonSchema which will
    has as its members the valid keys that can be used
    for the JSON startup data. Also created a global
    (constant) variable called EXAMPLE_JSON which is
    just the contents of test_data.json as a string.
    This will hopefully make it easier to create the
    code to generate JSON data using the JsonSchema
    class since there is now an example to work with.

commit c820ba03df47d93fa77c8b9e1831e8ec70ee783e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 17 23:35:22 2023 -0400

    Moved the position of the json_creator function to
    above the json_reader function

commit 1264a32bf49f5a873ec2190f1fb0edf77826002d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 17 23:06:50 2023 -0400

    Several changes - see details
    
    Created a new function called json_creator to
    call when the user selects option 1 from the main
    loop. Similar to json_reader, it takes in the
    json_path list and the json_filename string
    variables.
    
    Also created a helper function called
    parse_full_path to assist with parsing json_path
    and json_filename into one absolute path in string
    format. Adjusted json_reader to call this helper
    function.
    
    Made some changes to json_reader including
    renaming the is_json_file boolean variable to
    read_json_success. This way, in the try-except
    block while reading in the JSON data, if there's
    an exception, a message could be returned "Unable
    to read JSON data" and the boolean is only set to
    true when the JSON data has been read in
    successfully.
    
    Finally, adjusted the call to the
    helper function as well as the try-except block to
    all be under the nested if-else block as part of
    the else clause. This makes sure that only if the
    JSON file has a .json extension, will reading the
    data be attempted.

commit 0c18e7712c023cc545df3b3e1ee2d31c3920f116
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 17 18:31:11 2023 -0400

    Minor linting change and addition of main loop
    
    Split the error message returned when the file
    extension is not .json to use Python's bracketed
    multi-line string syntax so the string didn't
    break the 80 character line rule.
    
    Added a loop in main to give the user a choice to
    create a new JSON file, edit an existing one or
    quit. Coded into the loop the ability to handle
    invalid user choices. Also, set up call to
    function json_reader to happen when user chooses
    to edit an existing JSON file.
    
    Lastly, added else to the line if not is_json_file
    so that if the file is a valid one, a message
    prints out.

commit e9e46d09abb70382e38c177d44ffdc74ff6eb0bb
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 16 23:30:42 2023 -0400

    Finished json_reader function in
    startupdata_modifier_tool.py
    
    Finished the function json_reader so it correctly
    either reads in the JSON data for a valid JSON
    file, or it returns an error message.
    
    Also added functionality to main that if an error
    message is returned, print that message and exit
    the program with a exit status of 1.
    
    Finally, had to remove the copy of test_data.json
    in the feature branch folder and use the original
    copy in data/json_data because part of the code to
    read the file involved using the os module along
    with os.path.join, os.getcwd and os.sep.

commit 5101dfff161b10fc3eb48fc87cce402dea18f9e6
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 16 18:51:27 2023 -0400

    Created example Python script from a
    RealPython.com tutorial
    
    Created the file json_requests.py in a subfolder
    for the branch called python_module_examples. Used
    the example script from
    https://realpython.com/python-json/ to practice
    using the json module along with the requests
    module, as well as manipulating JSON data.
    
    This helped me to understand better how JSON
    data structures translate to Python data
    structures.

commit 14108d6f660cd3293ddbea6df868c7272e410809
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 15 19:01:02 2023 -0400

    Changes to json_reader function
    
    Updated if-block to make it more concise. Tested
    that worked. Added docstring for function.

commit ca40b927a66bc15873052e987d76b55155772716
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 14 23:30:34 2023 -0400

    Added TODO comment
    
    Added TODO comment above if-block with work to be
    done based on what was listed in commit ce47900.

commit ce479009aa864d23549ccf33db945ac30366b183
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 14 23:19:46 2023 -0400

    Started coding startupdata_editor.py
    
    Added initial code to switch between testing and prod environments.
    Created function json_reader to read in the startup_data.json file for
    prod or the test_data.json file for testing. Added code to the function
    to test to make sure the filename given to open is a JSON file (i.e., it
    has a .json extension).
    
    Need to refactor the if-block that checks the filename as it can be
    simplified and made more concise.

commit 01394d0560aaa6fa0a7c4ad948a620bdc576a8ed
Merge: 8075c14 2cb9b63
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 14 19:30:44 2023 -0400

    Merge branch 'main' into features/json_schema_update

commit 00e905568f9b862bae9b4d386ab97fd22353bc77
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 14 19:25:28 2023 -0400

    Initial commit for feature branch
    
    Created the file startupdata_editor.py which will be the tool used to
    create and edit the startup_data.json file. Also copied the
    test_data.json file from the folder CompStart\data\json_data to use
    while working on this branch.

commit 2cb9b633afd3a7b4481bee0187b09a83b14cb4b3
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 14 19:16:26 2023 -0400

    Updated the README.md file in feature_addons
    
    Updated the README.md file in feature_addons for the new feature branch
    startupdata_modifier_tool. See the README for more information on this
    branch.

commit 1cc8d713c7c6c7b4cf8cf6bc8c35cff927ef895b
Author: David <hiranwatson@gmail.com>
Date:   Mon Aug 14 10:19:20 2023 -0400

    Updated startup_data.json
    
    Created copies of startup.bat, startup.ps1 and
    startup_data.json in a folder called CompStart in
    %localappdata% on my work laptop. This will allow
    for working on the git repo without worrying about
    realtime or active changes that need to be made to
    startup_data.json for work purposes.
    
    Also updated the %localappdata% version of
    startup_data.json to reflect current startup
    needs. Copied over new startup_data.json data to
    file in main branch of git repo.

commit 8075c144e99a20f8950b6ba7c26709aca10deecb
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 13 14:50:03 2023 -0400

    Updated feature branch directory structure
    
    Moved feature folder from CompStart subfolder into project root folder
    to align with merge 51c75e4.

commit fe831108a2dd7bf806b3bf3587488087c476e06e
Merge: f7bb128 51c75e4
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 13 14:47:46 2023 -0400

    Merge branch 'main' into features/json_schema_update

commit 51c75e48918e9bbe253afabcbe2248241088cda9
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 13 14:41:48 2023 -0400

    Rearranged directory structure
    
    As part of the process of moving the CompStart program from the
    Dealer-FX Scripts repo to its own repo, moved all files and folders from
    the subfolder CompStart to root.

commit f7bb1284b1ccd3e4dc0b724f843f70e1e1666c27
Merge: 757bef9 8e2f41a
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Aug 11 13:00:03 2023 -0400

    Merge branch 'main' into features/json_schema_update

commit 8e2f41ae4afc653db9be078648d76a13a2e8b9ed
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Aug 11 12:54:55 2023 -0400

    Adding .gitingore file mostly for Python-specific content

commit 569882058d1862c5cffaeb43b125339c94cbca5e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 10 19:11:52 2023 -0400

    Updated README.md to include information on the
    feature branch features/python_tkinter_test.

commit 7e2b428343b1ca4f2dd6fdf7e5beda391d5bc38c
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 10 18:36:49 2023 -0400

    Updated README.md for feature_addons folder to
    include newest feature branch,
    features/powershell_installer.

commit 757bef98a583c2bfbbb56962bf5f689df52bf4b1
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 01:14:36 2023 -0400

    Set up feature branch features/json_schema_update
    
    Added content to the feature_addons/README.md for
    this branch. Wrote up two paragraphs of what this
    branch is for and what I want to do as next steps.
    
    Also copied the startup_data.schema.json file from
    the data/json_data to the feature branch folder,
    feature_addons/json_schema_update.

commit a67f8d15e2f35f7ec2cf5c9f98111a42472c8fe7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 01:07:59 2023 -0400

    Various changes to directory structure and updated
    CompStart/README.md
    
    Moved around the location of some files and also
    updated the main README.md for CompStart to the
    current folders and files found in the CompStart
    folder.

commit cc34cb512588f1cc3199a3a77bea746348737e48
Merge: b61a073 d9de53e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:46:09 2023 -0400

    Merge branch 'features/revert-commit_d2514b3dedfcda44c7a259377a0087d25696a8f21'

commit b61a073297c059238a9440e224f7b19855b7e381
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:39:12 2023 -0400

    Added about branch created for commit revert to
    README.md
    
    Added to feature_addons/README.md about features/
    revert-commit_d2514b3dedfcda44c7a259377a0087d25696
    a8f21 and its purpose.

commit 907b8baa408d6b12590d4eb6da078768bd0806a5
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:32:14 2023 -0400

    Merged features/bat_installer into main and major
    updates to README.md in feature_addons folder
    
    After commit d2514b3 and finishing the process
    outlined in commit d301c6d, performed merge of
    features/bat_installer branch to main. This was
    just a fast-forward merge, so there is no separate
    3-way merge commit message.
    
    This commit is actually the first one on branch
    main after the branch merge. In README.md, created
    2 categories for "Current Branches" and "Past
    Branches". Went through all the commit logs and
    listed all the past branches plus wrote a little
    synopsis of what was done for each branch.
    
    Also, copied the first line from the
    features/json_schema_update README.md about that
    branch to README.md so there will be a little
    blurb about the purpose of
    features/json_schema_update.

commit d9de53e6b13f7d4bad7ef50cf523e765cbd41d97
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:39:12 2023 -0400

    Added about branch created for commit revert to
    README.md
    
    Added to feature_addons/README.md about features/
    revert-commit_d2514b3dedfcda44c7a259377a0087d25696
    a8f21 and its purpose.

commit cc24cb5de90e5093e7ae8b81ef81e9b221a9c134
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:32:14 2023 -0400

    Merged features/bat_installer into main and major
    updates to README.md in feature_addons folder
    
    After commit d2514b3 and finishing the process
    outlined in commit d301c6d, performed merge of
    features/bat_installer branch to main. This was
    just a fast-forward merge, so there is no separate
    3-way merge commit message.
    
    This commit is actually the first one on branch
    main after the branch merge. In README.md, created
    2 categories for "Current Branches" and "Past
    Branches". Went through all the commit logs and
    listed all the past branches plus wrote a little
    synopsis of what was done for each branch.
    
    Also, copied the first line from the
    features/json_schema_update README.md about that
    branch to README.md so there will be a little
    blurb about the purpose of
    features/json_schema_update.

commit 245bc28c753ce2e07cd13dbbde82daeedffe8273
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Aug 7 00:04:50 2023 -0400

    Revert "Minor changes to README.md in feature_addons"
    
    This reverts commit f6b1f2d9f2ca31f940bbb55f8546dd7cae3ad97c.

commit 133b1b1cd8a12b516beebf74d609de922a8bec53
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 23:21:55 2023 -0400

    Minor changes to README.md in feature_addons

commit 8008087f451059ed0b9980471f0ad54eac9dc6d4
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 23:18:38 2023 -0400

    Major updates to README.md in feature_addons
    folder
    
    Created 2 categories for Current Branches and Past
    Branches. Listed all the past branches and wrote a
    little synopsis of what was done for each branch.

commit d2514b3dedfcda44c7a259377a0087d25696a8f2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 22:30:12 2023 -0400

    Continued process outlined in commit d301cd6
    
    Completed step 4 from commit d301cd6. Also updated
    README.md.
    
    I forgot that there is only one README.md in the
    features_addons folder. Rather than deleting it, I
    will remove all references to the branch
    features/bat_installer.

commit a7d752963e4ff88a52bc6df2687cf9cbec5d7dfa
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 22:26:34 2023 -0400

    Started process outlined in commit d301cd6
    
    Completed steps 1 and 2 of commit d301cd6

commit d301c6d595f17de1e461cecf9062b3845f522c50
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 22:17:46 2023 -0400

    Changing installer approach
    
    Updated README.md to indicate that I'm switching
    from using a batch installer to a PowerShell
    script. Prior to starting that, I plan to do the
    following:
    
    1. Move CompStart.bat to the project root folder.
    
    2. Move setup.bat to the project root folder.
    
    3. Delete the README.md file for this branch.
    
    4. Delete the branch folder including all contents
       since at that point, the only files should be
       startup.ps1 and test_data.json both of which
       will be copies of what's in the project root
       folder.
    
    5. Merge this branch into the main branch.

commit a4756efc83c646a2e7dab521485a4a121cbd52fd
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 22:14:11 2023 -0400

    Changes to setup.bat

commit d24a1c6777a79d8df3031cf581e790e44c05cb15
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Aug 6 17:44:40 2023 -0400

    Renamed test.bat and tested creating a symlink
    
    Renamed test.bat to CompStart.bat. Also created
    a simulation_tests folder with 2 subfolders:
    
    program_files_folder
    startup_folder
    
    Tested programmatically using mklink to create a
    symlink but don't have the permissions. Will need
    to either change setup.bat to be a PowerShell
    script that I can then run with privilege, or copy
    startup.bat (which I will also rename to
    CompStart.bat) to the user startup folder instead
    of creating a symlink or shortcut.

commit 19ef091efa59b8c904fe01350a08f7479e878327
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 5 02:49:53 2023 -0400

    Updated setup.bat for startup folder
    
    Created a startup folder called
    'startup_folder_test' to use for testing and
    created a variable to point to that folder or the
    real local user startup folder depending on which
    environment we're in.

commit 85b07fb7cad2814c60fc3c9737eccbc7b3ef1dcd
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 5 02:37:10 2023 -0400

    Major update to setup.bat
    
    Created variable to toggle between test and prod
    environments. Refactored code as well as variable
    names to toggle between both environments as well
    as make code cleaner and easier to follow.
    
    Ran code to create test.bat since currently in
    test environment.

commit 5ad3529fb91ed57e0632de3b598734fd160d24ad
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sat Aug 5 01:57:01 2023 -0400

    Created install_files folder to test installation
    steps
    
    Within feature folder 'bat_installer', created
    sub-folder 'install_files' and copied startup.ps1
    to it. Also created 'data' folder as
    sub-sub-folder and copied test_data.json to it.
    
    Will use those two to add more installation steps
    to setup.bat.

commit 61f6c726e104c3bea8c131b58465cb95a93d9aad
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 22:37:14 2023 -0400

    Set up feature branch features/bat_installer
    
    Added content to the feature_addons/README.md for
    this branch. Wrote up two paragraphs of what this
    branch is for and the various files involved.
    
    Also moved the setup.bat file from the project
    root folder - CompStart - to the feature branch
    folder - feature_addons/bat_installer.
    
    Finally, updated setup.bat to the current path for
    test.bat which is in data/test_data. Previously,
    the path was still pointing to data/test_files
    from a previous renaming of the test_data folder.

commit 47a963404bf0c7b02a1339c6a2e4bb53b9fa1c72
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 22:29:26 2023 -0400

    Updated README description of feature_addons folder and title to CompStart/features

commit 62d28de6a48d2222f7c90ba08f10793714ac69d8
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 22:26:24 2023 -0400

    Updated README in feature_addons folder for the feature branches

commit 1ec22cb3f249f7c08054c91b786a4a37cdea8af2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 21:29:50 2023 -0400

    Updated main README.md
    
    Added list and description of all files and
    folders. Also, changed some formatting, including
    using two H2 headings and 2 H3 headings.

commit 4e9f3b733b5090f33751fc6c81ada8660eaf6d49
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 21:01:56 2023 -0400

    Renamed features folder back to feature_addons

commit 987c3184532afffcf3711cb6f4980bce706d519e
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 3 18:53:27 2023 -0400

    Added online article for PyInstaller to create
    executables from Python files
    
    The plan is to create the tool that wil let a user
    create the startup data JSON file in Python and
    then convert it to an executable.

commit f5c24d20018870ffb98e692392e9248cefcfa16b
Author: David <hiranwatson@gmail.com>
Date:   Thu Aug 3 00:27:41 2023 -0400

    Update README.md
    
    Started adding purpose of program and list of files and folders

commit a4910256822811cf4e4d4157257a5b17d3bf484b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Aug 3 00:04:57 2023 -0400

    Cleaned up directory structure
    
    Created several subfolders under data: json_data,
    misc_data, old_data, and test_data. Moved
    startup_data.json and startup_data.schema.json to
    json_data. Updated startup.ps1 to reflect that.
    Also moved extra_info.txt to misc_data and
    old_startup.ps1 to old_data. Updated setup.bat to
    use test_data and ran it so test.bat was created.
    Finally, moved test_data.json to test_data.

commit e1c0231f77169e57f221b97849b71af8711a87e6
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 23:54:11 2023 -0400

    Renamed the feature_addons folder to features and
    created README.md for the features folder

commit b9ea9891af2164798ace1d7e1bdb28d26b6fe929
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 23:51:16 2023 -0400

    Created README.md for CompStart

commit c1530e7cac1b8141f6415ecdff35308df42e4638
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 23:47:22 2023 -0400

    Moved misc.txt and startup_data.schema.json
    
    Moved both files from the
    feature_addons/json_schema folder to the data
    folder. Also, renamed misc.txt to extra_info.txt.

commit c6c457e04c11f495b17226a6b09ad524a1737b40
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 21:32:26 2023 -0400

    Adding back changes from features/setup_startup
    branch that were removed due to merging main into
    features/json_schema and then reverting that merge
    
    Commits 0c75851 to e07dc81 were all created
    mistakenly. I wanted to update
    features/json_schema with the changes in main, so
    from commit 33d60fb and earlier. This worked but
    then I worried about what would happen when I
    later needed to merge features/json_schema back
    into main.
    
    In an attempt to 'undo' the merge - commit
    e07dc81 - I ran git revert resulting in commit
    c2cb5ff. I forgot that the log tracks all commit
    history so I thought my revert messed up. I also
    thought when I went back to merge
    features/json_schema into main, it would create
    duplicate commits.
    
    After posting on Stack OverFlow, I realized that
    duplicate commits don't happen since every commit
    has a unique hash id. I decided to merge
    features/json_schema into main and delete the
    features/json_schema branch. However, due to the
    revert - see commit c2cb5ff - both main and
    features/json_schema had the same content.
    
    They both had the feature_addons/json_schema
    folder, and both the updated misc.txt and updated
    startup_data.schema.json files. But they no longer
    had setup.bat and they also had an old version of
    startup.bat. Prior to pushing commit 0c75851 to
    origin/main, I copied the contents of the updated
    files from GitHub to a file outside the project
    folder.
    
    I have now readded setup.bat and updated
    startup.bat to the state of those two files from
    commit 33d60fb.

commit 0c758510f5529b8356ee852340d2c86087c4cf74
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 21:12:53 2023 -0400

    Updated misc.txt

commit c2cb5ff598fa5bf029dfe729899c2c5d35dd4296
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 11:35:32 2023 -0400

    Revert "Merge branch 'main' into features/json_schema"
    
    This reverts commit e07dc812a90bb7d619d72767f0fedf43eebb1c97, reversing
    changes made to bdf5291c3f70a74f378e2ea38e736684dd568b93.

commit e07dc812a90bb7d619d72767f0fedf43eebb1c97
Merge: bdf5291 33d60fb
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 10:56:33 2023 -0400

    Merge branch 'main' into features/json_schema

commit bdf5291c3f70a74f378e2ea38e736684dd568b93
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 10:52:58 2023 -0400

    Updated schema specs for key "ArgumentsList"
    
    Found out through a StackOverflow question about
    the allOf keyword for JSON Schema and used that
    for "ArgumentsList" to specify the key can take
    strings or an array of strings. Tested and
    validated that it works.

commit 33d60fb1db1233b0d4feb98d89dcac07cb9215c0
Author: David <hiranwatson@gmail.com>
Date:   Wed Aug 2 10:50:07 2023 -0400

    Updated startup.bat and setup.bat
    
    Ran setup.bat on work laptop to update startup.bat
    so the full path being used is the one on the work
    laptop since currently that is my production
    environment.
    
    In setup.bat, changed back the variable
    BATCHSCRIPT_FILENAME to test.bat to not mess up
    the production environment.

commit 0f59cb08fc194746e04214eb150c2892d46eede3
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 00:15:10 2023 -0400

    Updated batch file name in setup.bat
    
    Changed the BATCHSCRIPT_FILENAME variable from
    test.bat, which was used in testing, to
    startup.bat, which is being used in production.
    Also updated the BATCHSCRIPT_RELPATH variable to
    only "\CompStart\" since the
    feature_addons/setup_startup no longer exists.
    
    Ran the code and tested it worked. In the process,
    it updated startup.bat to have the full path to
    startup.ps1 for the "-File" parameter.

commit 18f561a83d67d156f59ecd1bc5cddea9dcb63cea
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 00:06:18 2023 -0400

    Revert "Updated batch file name in setup.bat"
    
    This reverts commit 1d7e7ecbae6b23c308734ed46befb3e4994285d7.
    
    This commit, along with commits 09442 and 03a12,
    are all to undo the changes made in commit 1d7e7.
    
    In commit 1d7e7, the wrong variable was changed.
    Instead of changing BATCHSCRIPT_FILENAME, the
    variable POWERSHELLSCRIPT_FILENAME was changed.
    
    In an attempt to revert the change, the commit
    before it, commit 5e1942 was accidentally
    reverted which produced commit 03a12. Then, in
    order to revert commit 03a12, commit 09442 was
    created.

commit 09442a074eb9f7a3d55fc173dfb801b785de6145
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 00:05:21 2023 -0400

    Revert "Revert "Deleted test.bat since it's no longer needed""
    
    This reverts commit 03a1259367a6c21eaeeaf937975bff367b324b8e.

commit 03a1259367a6c21eaeeaf937975bff367b324b8e
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Aug 2 00:04:29 2023 -0400

    Revert "Deleted test.bat since it's no longer needed"
    
    This reverts commit 5e1942f56847cb378f949b7137bce2426611c8b4.

commit 1d7e7ecbae6b23c308734ed46befb3e4994285d7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 1 23:59:58 2023 -0400

    Updated batch file name in setup.bat
    
    Changed the BATCHSCRIPT_FILENAME variable from
    test.bat, which was used in testing, to
    startup.bat, which is being used in production

commit 5e1942f56847cb378f949b7137bce2426611c8b4
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 1 23:59:04 2023 -0400

    Deleted test.bat since it's no longer needed

commit bac2273c88f5fe0d8db185dc96cd6c3dbe6f553b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 1 23:57:29 2023 -0400

    Moved setup.bat from feature_addons/setup_startup
    folder to main CompStart folder

commit 5e72f186ba370dfaf8042c0dce84fb42744358ea
Merge: 17ae6ce e0892ef
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 1 23:55:22 2023 -0400

    Merge branch 'features/setup_startup'

commit e0892ef32f87ad29aaddcb2fd6717ec3ee24d4e3
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Aug 1 23:44:14 2023 -0400

    Refactored setup.bat to be more abstract
    
    Refactored setup.bat to use a variable called
    SCRIPT_ROOT to store the current directory. Added
    three new variables for the PowerShell script
    startup.ps1. Renamed the BATCHSTART variables to
    BATCHSCRIPT to have consistent naming.
    
    The added and modified variables are:
    
    SCRIPT_ROOT: The current directory the script is
    running from.
    
    BATCHSCRIPT_RELPATH: Replaces BATCHSTART_RELPATH
    BATCHSCRIPT_FILENAME: Replaces BATCHSTART_FILENAME
    BATCHSCRIPT_FULLPATH: Replaces
    BATCHSTART_FILENAMEPATH
    
    POWERSHELLSCRIPT_RELPATH: Relative path of the
    startup.ps1 script from SCRIPT_ROOT
    POWERSHELLSCRIPT_FILENAME: The name startup.ps1
    POWERSHELLSCRIPT_FULLPATH: The full path of
    startup.ps1, basically combining previous two
    variables
    
    BATCHSCRIPT_CMD: Same as before but updated to
    use POWERSHELLSCRIPT_FULLPATH for the "-File"
    parameter
    
    This should make it easier to update or change
    relative paths and filenames during testing and
    for production.

commit d911e7f5f80ad098c1065400077b65b9bfcd228a
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 1 14:44:12 2023 -0400

    Updated file path in startup.bat to
    %CD%\CompStart\startup.ps1
    
    The previous path of just using %CD% was pointing
    to the root folder of the Dealer-FX folder. Had to
    add CompStart to specify the proper location of
    startup.ps1.

commit 17ae6ceb0576a9276880702755170ec81f13c250
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 1 14:43:44 2023 -0400

    Updated file path in startup.bat to
    %CD%\CompStart\startup.ps1
    
    The previous path of just using %CD% was pointing
    to the root folder of the Dealer-FX folder. Had to
    add CompStart to specify the proper location of
    startup.ps1.

commit 3782913f571e1c28c35d9fa29340e449eb0c8707
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 1 14:42:10 2023 -0400

    Updated file path in startup.bat to
    %CD%\CompStart\startup.ps1
    
    The previous path of just using %CD% was pointing
    to the root folder of the Dealer-FX folder. Had to
    add CompStart to specify the proper location of
    startup.ps1.

commit 37a21a423a5feb17bc880b8f2da6c26eb53d5221
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 1 14:37:13 2023 -0400

    Applying changes made on branch
    features/setup_startup
    
    Applying changes from commit
    4a4c33eedd3c0acc00ea24d389a74c7dbda2827 on branch
    features/setup_startup to startup.ps1.
    
    Also applying changes from commit
    15874002796538a01ca5b3be9090f53358c19a6e on branch
    features/setup_startup to startup_data.json
    
    This is to keep both files in line with the latest
    changes to these files. The latest changes were
    made while working in branch
    features/setup_startup but then they weren't
    merged to branch main and changes made to
    setup_startup.bat were committed afterward.

commit 98d4e971c82d2b930536b3d032b973ff57d35e6a
Author: David <hiranwatson@gmail.com>
Date:   Tue Aug 1 14:25:09 2023 -0400

    Applying changes made on branch
    features/setup_startup
    
    Applying changes from commit
    4a4c33eedd3c0acc00ea24d389a74c7dbda2827 on branch
    features/setup_startup to startup.ps1.
    
    Also applying changes from commit
    15874002796538a01ca5b3be9090f53358c19a6e on branch
    features/setup_startup to startup_data.json
    
    This is to keep both files in line with the latest
    changes to these files. The latest changes were
    made while working in branch
    features/setup_startup but then they weren't
    merged to branch main and changes made to
    setup_startup.bat were committed afterward.

commit efc3171c10b094e683cd916afa2bc3bedc68d14d
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 31 18:54:29 2023 -0400

    Created schema and a text file
    
    Using the json-schema.org specs, I created the
    schema to validate startup_data.json. The schema
    is currently not able to validate the key
    "ArgumentsList" since it can contain both strings
    and an array of strings.
    
    Additionally, extra info such as required
    properties, definitions, etc. need to be added.
    
    Also create a misc.txt file to store the URLs of
    two validation attempts.

commit 23bb432f3ad1d2dbb56662f4bc9571d13e0c8821
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 31 18:17:57 2023 -0400

    Updated incorrect ArgumentCount values

commit 22d2d61e18b826a4b69f543d008fe861a557297a
Author: David <hiranwatson@gmail.com>
Date:   Fri Jul 28 13:08:05 2023 -0400

    Updated the file location code for the
    startup.bat redirection
    
    Refactored the section for redirecting the
    startup command. Also renamed all the variables
    to make them clearer. Added in several echo
    commands to confirm each variable is holding the
    correct information but prior to committing, those
    commands were commented out.
    
    The following variables are now being used:
    
    STARTFOLDER_RELPATH: The relative path of the user
    start folder from after the user home directory
    STARTFOLDER_FULLPATH: The full path of the user
    start folder from the C drive
    BATCHSTART_CMD: The command to add to startup.bat
    which will run the startup.ps1 PowerShell script
    BATCHSTART_FILEPATH: The path of where to create
    startup.bat relative to %CD%
    BATCHSTART_FILENAME: The name startup.bat although
    currently it's set to test.bat until ready to
    put into production
    BATCHSTART_FILEPATHNAME: The full path plus name
    for the startup.bat file and it's really just the
    above two variables put together
    
    The redirection command is just echo
    BATCHSTART_CMD to BATCHSTART_FILEPATHNAME.
    Currently, while working on this feature branch,
    BATCHSTART_FILEPATH points to the branch folder
    but will need to be updated to point to the
    program root folder.

commit aabe0ad683a17c4c38f9c63cacd951a35c142ddc
Author: David <hiranwatson@gmail.com>
Date:   Fri Jul 28 12:02:05 2023 -0400

    Updated total_items in startup_data.json from 6
    to 7

commit 15874002796538a01ca5b3be9090f53358c19a6e
Author: David <hiranwatson@gmail.com>
Date:   Fri Jul 28 11:15:38 2023 -0400

    Updated startup_data.json
    
    Updated contents of startup_data.json to reflect
    current setup of apps, browser windows, etc. Also
    filled in comments fields for each startup item.
    
    The current setup was copied from a local older
    version of the startup.ps1 script that I had moved
    directly to my user startup folder while working
    on the features/json_data branch. This older
    version wasn't being tracked but I had set it up
    for my current needs.
    
    I updated startup_data.json because I decided to
    use the current version with the
    features/json_data branch merged in. However, when
    the script ran this morning, the browser tabs and
    Chrome apps that opened reflected an older setup.

commit 4a4c33eedd3c0acc00ea24d389a74c7dbda28274
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 17:46:37 2023 -0400

    Made it easier to switch between testing and
    production environments.
    
    Removed the comment "**Uncomment when ready to put
    into production**" (see commit
    1b303cb898e8670816e50c4f3c7bde2fccb77d0a). Created
    boolean variable called $IsProdEnv so only have to
    change one location in code when switching between
    production and testing use of startup.ps1 script.
    
    Also added if blocks to the 2 locations where
    previously there was the comment from commit
    1b303cb898e8670816e50c4f3c7bde2fccb77d0a. Now,
    depending on the value of $IsProdEnv, the main
    do loop will prompt the user to run the script and
    use the file startup_data.json, or assume the user
    is always typing Yes and use the file
    test_data.json.

commit eda8d82bb47855dc768cc8af8aa8b4224ba88863
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 15:34:54 2023 -0400

    Adding test.bat from running script
    
    Ran previous code committed to create test.bat.
    Created it in the features/json_schema folder.

commit 3ae119edc0b5a81330d9c27675ebf523d7af574c
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 15:26:03 2023 -0400

    Added code to create startup.bat
    
    Created variable to store the command to run the
    startup.ps1 PowerShell script. Then directed that
    variable to a file called test.bat. This is
    currently being used to not clash with
    startup.bat. However, in production, this will
    change to redirect to startup.bat.
    
    The idea is that when first "installing" this
    program, CompStart, there will only be setup.bat
    for less confusion. This batch file is run and it
    will create startup.bat, move it to the user's
    startup folder, and move all other program files
    to a permanent directory (most likely in Program
    Files).

commit e044e6a2974f3d7904de4f6a51d82893037b0c00
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 15:25:06 2023 -0400

    Added path to user startup folder
    
    Created two variables to store relative and full
    paths to the user's startup folder. Also turned
    echo off.

commit eda034172299614a031d7da79e1549d291f69e14
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 10:22:03 2023 -0400

    Created file setup.bat
    
    This batch script will copy both startup.bat and
    startup.ps1 to the local user's startup directory

commit f8dc3dd94e1a92fe2451b7879b52bd0713a903de
Merge: 0da89fd f42cb45
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 10:16:11 2023 -0400

    Merge branch 'main' into features/json_schema

commit f42cb45bd1f980a7b176bd70985d89929ac6d2d0
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 27 10:14:27 2023 -0400

    Renamed startup.ps1 to old_startup.ps1 and made
    new_startup.ps1 the main startup.ps1 script to use

commit 0da89fd4857a2dafa760c1dc1517ac55dc28e343
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Jul 21 20:03:39 2023 -0400

    Added schema version line

commit d1293372babdbe60aeb468ebc1e0565640819e2b
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Jul 21 19:41:35 2023 -0400

    Created blank JSON Schema document and used file
    extension .schema.json

commit 1b303cb898e8670816e50c4f3c7bde2fccb77d0a
Author: David <hiranwatson@gmail.com>
Date:   Thu Jul 20 14:10:49 2023 -0400

    Cleaned up code in new_startup.ps1
    
    Removed commented out code that's no longer needed
    and added the following comment to 2 lines of
    commented out code that needs to be uncommented
    when ready to put new_startup.ps1 into production:
    
    **Uncomment when ready to put into production**
    
    Also added following comment to line of code in
    function Get-StartupItem that pulls a startup
    item's comments field from the json data file:
    
    **Uncomment when ready to use item comments**

commit a577720a290d750feec508ef7c33a47a8e493c47
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Jul 19 22:44:42 2023 -0400

    Deleted json_file feature branch
    
    Deleted folder json_file in feature_addons along
    with all files and subfolders.

commit 1da8a15fd91e318895853039ce87dc524c2737c2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Wed Jul 19 22:35:55 2023 -0400

    Copied files from feature_addon/json_file branch
    to main
    
    Copied files startup_data.json and test_data.json
    from feature_addon/json_file/data to data folder
    at project root level.
    
    Also copied script
    feature_addon/json_file/new_startup.ps1 to project
    root level.

commit b48c4547001db2cfa3cd3abeadb358f491a292e6
Merge: d513d11 84eb521
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 22:17:52 2023 -0400

    Merge pull request #2 from dEhiN/features/json_file
    
    Merge features/json_file

commit 84eb521c34fd61983498828bd6ba1392a83560ef
Merge: 700393f d513d11
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 17:33:32 2023 -0400

    Merge branch 'main' into features/json_file

commit 700393fe87c1b22d34a39a165f0b567ac5c40eda
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 16:49:54 2023 -0400

    Test success!
    
    Tested new_startup.ps1 with test_data.json and it
    worked successfully. Also commented out the
    variable $ItemComments in function Get-StartupItem
    because the variable isn't currently used.

commit 1783068430f6cfe726d08a1114d1743d9ce22157
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 16:17:33 2023 -0400

    Updated main script to open test_data.json

commit e6f38f5ab9183323425461c8e34e8e6f75b681cb
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 16:16:07 2023 -0400

    Added new JSON file for testing
    
    It contains only one startup item: notepad

commit ab5529432064cece2585c8d298dd620528f15c72
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 14:17:00 2023 -0400

    Added Start-Process commands
    
    Added Start-Process commands to function
    Start-StartupItem. If there's an argument list,
    I pass that to the Start-Process command. If not,
    I call the command without it.

commit 56a479bda6bbb364f6bbab7e6257aea01fce203e
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 13:59:31 2023 -0400

    Filled out more of function Start-StartupItem and
    call it from Get-StartupItem
    
    Set up proper parameter order for the function to
    have $StartupItem (or $ItemNumber) first and
    mandatory, $ProgramPath (or $ItemPath) second and
    also mandatory, and $ArgumentsList (or $AllArgs)
    as third.
    
    I didn't make that last parameter mandatory and
    gave it a default value of $null in case a startup
    item doesn't have a arguments list.
    
    Also updated Get-StartupItem to call
    Start-StartupItem passing in the proper arguments.
    
    Lastly, added if statement to Start-StartupItem
    to check if $ArgumentsList has a value or not.
    I will need to fill in the if blocks for each
    scenario.

commit 92fdb1c0f369d62d5014f4bbf43b4f95d6daef06
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 11:06:03 2023 -0400

    Added code to get comments from JSON object

commit 57432c97d23d0f0b3ea11ecc489c996660fc6cd9
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 19 10:36:34 2023 -0400

    Add new property to JSON objects
    
    Added a "Comments" property to each JSON startup
    item. Currently, the default value is "" and this
    property is not being used. But it's there for
    future use.

commit d513d112f987f1a31c1c11d8edff6ee3c2e42fab
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 18 16:16:22 2023 -0400

    Minor changes
    
    Added two commas to the first set of Chrome tabs
    which were missing between each string item in
    the array.

commit 63ad931064beecdd408561f6958805c0687bebf3
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 18 14:03:55 2023 -0400

    Minor new line and indentation changes

commit c760c624cf18f1646ff786d161fe62f3d40506c0
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 18 12:49:08 2023 -0400

    Made changes to startup items
    
    Changed Chrome tabs and windows to only have two
    windows. Added Google Calendar and "New Email -
    ALL OEM" GSheet to first window. Added AWS Agent
    App to second window. Removed third window.
    
    Also removed use of "Bloc-notes de billets"
    GSheet since it's no longer being used. Added
    Chrome app TasksBoard and spaced out all the
    Start-Process lines.
    
    Making changes to main branch with plans to place
    a copy of the whole ps1 script to the startup
    folder until I finish the feature/json_file
    branch.

commit 79f8f2d9ecf31748d67fb6160aa553b47d7928ae
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 18:09:41 2023 -0400

    Created new help function Start-StartupItem to
    call Start-Process for the actual startup item
    
    The new function takes 3 parameters, 2 mandatory
    and 1 optional. They are the item file path,
    the string $AllArgs, and the item number based
    on the json file. Currently nothing is done with
    the item number but it's passed along in case.

commit dcd3d29c8aa8444aa3307c51c9cd9e3b726a9cd7
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 17:54:28 2023 -0400

    Renamed function from Submit-StartupItem to
    Get-StartupItem

commit 8a120fb1156bb182ceff4a4a57ad26d62a6b54d7
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 17:49:26 2023 -0400

    Implemented loop to process startup items
    
    Filled in loop in function Submit-StartupItem to
    process all the arguments for a startup item.
    
    The loop first checks if there is an argument list
    and then loops through the list. It uses a string
    variable called $AllArgs to store the full list
    and concatenates each argument to that variable.
    
    The loop also checks if the startup item is a
    browser and when on the last argument, which will
    be the browser sites/tabs to open, adds them all
    to the $AllArgs variable.
    
    Finally, spaces are inserted so at the end of the
    loop, $AllArgs is a properly formed string that
    can be passed to Start-Process.

commit 7715e7bce5ea56a9a327a4f8ac83b8606f851419
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 16:19:40 2023 -0400

    Started loop to process arguments list in function

commit 7c14c9d0d2f11c62479f99935914bc49945a6b80
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 16:08:46 2023 -0400

    Variable name change
    
    Changed $ArgList to $ItemArgList in function to be
    in line with all other property variable names.

commit c5a76e2e218cbf7f969e6162e04ccc64a5e440f4
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 16:05:16 2023 -0400

    Changed distribution of duties
    
    Removed processing of $StartupItem in main loop
    to a PSCustomObject called $Item. Instead, now
    pass $StartupItem directly to function Submit-
    StartupItem.
    
    Inside function, created 5 variables to hold each
    of the properties of $StartupItem.

commit c445c22c3388e29156042242798f8e975cdff66c
Author: David <hiranwatson@gmail.com>
Date:   Mon Jul 17 13:59:38 2023 -0400

    Created helper function Submit-StartupItem to
    process each JSON object
    
    Created new function called Submit-StartupItem
    with one mandatory parameter. Idea is that loop
    in main body that loops through each JSON object
    representing a startup item will pass the
    PSCustomObject with all the startup data to this
    function for processing.

commit ef03281836f43ea98f6d26cb654b195797777319
Author: David <hiranwatson@gmail.com>
Date:   Fri Jul 14 12:09:07 2023 -0400

    Adjusted startup data to reflect current setup
    
    Removed Bloc-Notes spreadsheet
    
    Set third Chrome tab to open Calendar and AWS

commit f39f51f561ca2023a2904e1c8e3c7a0d01cd334a
Author: David <hiranwatson@gmail.com>
Date:   Fri Jul 14 12:04:13 2023 -0400

    Removed Bloc=Notes spreadsheet

commit d906d19f3d23e3e2c843fba7b80bdddfec7f40fd
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Sun Jul 9 00:25:49 2023 -0400

    Added To-Do for next step as comment

commit 8fe01299b0eba915199a669418003cd9777cc4bb
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 5 18:00:58 2023 -0400

    Added to-do to create function

commit 8c233fe4fb12946992a0271d2bb5ee868b5aeb07
Author: David <hiranwatson@gmail.com>
Date:   Wed Jul 5 15:24:50 2023 -0400

    Added code to get JSON data from file and loop
    through elements
    
    Changed variable to hold JSON data from file when
    using Get-Content cmdlet and created new variable
    to hold actual JSON data (stored in key Items).
    
    Created foreach loop to go through each start up
    item and add all the properties, or keys, into a
    PSCustomObject variable for each of access.

commit 255684dd7588aa649b11b19ab6bc2ad5ebf9459a
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jul 4 18:24:20 2023 -0400

    Minor code changes

commit 082ceced2693cdd02841b35a097cab000297b6a5
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 4 18:00:40 2023 -0400

    Removed some commented out old code

commit 45ce6aa3a99707a6ee2318e1e8fa627df43c6d35
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 4 17:56:55 2023 -0400

    Copied json data file and changes to script
    
    Made a copy of the startup_data.json file as well
    as the data folder into the branch folder
    (feature_addons\json_file).
    
    Also, changed script to use $PSScriptRoot so can
    use relative paths to access json file.

commit 13a4073e86d21a00c34cb20fa1b78a27c9a0e451
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 4 15:39:51 2023 -0400

    Changed directory structure for new feature branches

commit e55d68eee22cebd72489439429c5864c9d367972
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 4 15:34:14 2023 -0400

    Cleaning up after merge pull request

commit 0a0fdcd9330b04935f29ad61e0b1f6b1654fb747
Merge: 38426d3 c18acca
Author: David <hiranwatson@gmail.com>
Date:   Tue Jul 4 15:20:15 2023 -0400

    Merge pull request #1 from dEhiN/update/add_json_file
    
    Trying 3-way branch merge

commit c18accab62b54a2df6764f01b20f026327bc4864
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jul 4 15:04:48 2023 -0400

    Rename app name from démarrage_ordinateur to CompStart

commit 4d58e99be37736f4c812b738a958d3dcffb34d31
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 27 17:05:17 2023 -0400

    Minor changes to tabs and windows in startup.ps1

commit a9e60ecf22d3488fba0e6d843e17dc56c7367354
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 27 11:34:12 2023 -0400

    Updated startup.ps1 to be same as main branch
    
    I switched branches to feature.update.one so needed to replicate changes

commit 38426d39d14c65b658096cdb6a686167c79a1ded
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 26 14:14:14 2023 -0400

    Adjustment to Chrome tabs and windows

commit 2e1cc39b4eebb6b37038c1d180b1ed5565f7deda
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Jun 23 00:15:49 2023 -0400

    Code to replace Get-Location with PSScriptRoot

commit afca9856c2c45a489b4ae3a8646af4b802d51e75
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 20 16:37:51 2023 -0400

    Two minor changes
    
    Updated startup to open Drive Chrome app to put in
    line with main branch. Updated new_startup to fix
    issue with Get-Location returning the parent dir
    instead of the same as pwd.

commit ae58a8428e59b23c141c084271f2900e3cd21454
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 20 14:36:04 2023 -0400

    Added Drive Chrome app as startup program

commit 0491de938685b0e45332ed73bf89c214ea917e1a
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 20 14:32:37 2023 -0400

    Changes to directory structure
    
    Accidentally changed project directory structure
    in branch feature.update.one. Making same changes
    in main to keep project directory structure in
    line.

commit d7aef64827ee2cfef7726a9378c945ef8baf2562
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 17:15:22 2023 -0400

    Started work on new version of startup script

commit 5f803e5c7f683a766cf087e0b7422188c2f4c50d
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 17:13:33 2023 -0400

    Made changes to startup_data.json
    
    Renamed all variables to use PascalCase. Moved
    file to folder called data.

commit 394178a038795fb67a0994914b28a6123339e1f7
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 12:34:18 2023 -0400

    Created copy of startup script in branch folder

commit 3058922d8b46df7bf24b1868790eb226605dbfee
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 12:33:17 2023 -0400

    Removed startup_orig.ps1, not needed

commit 26cf064b5c9e51ce88c2c9047fc0d3dd7107fb17
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 12:31:43 2023 -0400

    FS folder restructuring

commit c3efa87aa080caef9bde861a1c71fbd0b9256ee5
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Mon Jun 19 09:05:51 2023 -0400

    Small URL change to chrome tabs

commit 3fb0206a5f1b785855d1b059ca2b91cbcb0bcbaf
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Jun 16 17:06:09 2023 -0400

    Removing Zoom

commit 0b10dfb7c33df02224b2c0730697a31ef9b63599
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Fri Jun 16 17:05:04 2023 -0400

    Updating json file
    
    Finished creating json file along with JSON structure

commit 06e9402a5fec48d83530a63ffbcedb81a3108d6f
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Jun 15 17:25:13 2023 -0400

    Initialization of new feature
    
    Refactoring code to allow for easier updating of
    programs to open by using a json file. This file
    will store all data for the programs to open
    including file path, argument lists, etc.
    
    This commit is adding the new json file called
    startup_data.json

commit 4205b73f661276a6156da7993c1f67d39b216143
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Jun 15 16:34:45 2023 -0400

    Variable renaming

commit 3363ae828da5e6e1dda9f2cacab9173104fb11c2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Thu Jun 15 12:00:16 2023 -0400

    Updated split of chrome tabs

commit c2496a04e79249fb538df446aee21dbf9ebfce09
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 16:53:02 2023 -0400

    Creating local verison of PS script

commit 2a8cccb19b5030d5d68d9704021b719ca8de51a2
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 16:52:34 2023 -0400

    Renaming PS script to make local copy

commit c990e73d81a7a8fcb1a2f6ff8a9082c64fe7fd84
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 15:30:27 2023 -0400

    Updated URLs & startup programs for DFX workflow

commit ca62f748edd02e85fe97f5139fd639b26007f268
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 15:29:40 2023 -0400

    Updated to open PS script from current directory

commit 83ff0146a7b201a81453ad9b2ded00d9ce2976a4
Merge: 7c73540 693a4e1
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 13:30:07 2023 -0400

    Merge branch 'main' of https://github.com/dEhiN/Dealer-FX_Scripts

commit 7c73540914b3a32eb6b8b1e946ffdf4b4b209a53
Author: David H. Watson <hiranwatson@gmail.com>
Date:   Tue Jun 13 13:29:44 2023 -0400

    Adding automated startup script

commit 693a4e169225d114b6226f335800cca4d0e438bb
Author: David <hiranwatson@gmail.com>
Date:   Tue Jun 13 13:24:30 2023 -0400

    Create README.md

commit ebf615262a6ff46e48cb539e626c68b5677de018
Author: David <hiranwatson@gmail.com>
Date:   Tue Jun 13 13:12:42 2023 -0400

    Initial commit
