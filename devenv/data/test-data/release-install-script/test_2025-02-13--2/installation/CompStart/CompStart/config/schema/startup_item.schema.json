{
    "$schema": "http://json-schema.org/draft-07/schema",
    "title": "Single startup item for CompStart",
    "description": "This is a schema for a single startup item used by the program CompStart. A single startup item represents a specific program, with optional parameters, that CompStart will open up on user logon. The data will be all contained in a base object. That base object will have the following keys: ItemNumber, Name, FilePath, Description, Browser, ArgumentCount, ArgumentList. The ItemNumber is so the objects can be numbered in the array. For example, if the user wants to open both Notepad and Calculator upon computer startup, the Items array would have two objects and the first one would have ItemNumber '1' while the second would have ItemNumber '2'. The Name key is whatever identifying name the user wants to give the entry, such as 'Notepad' or 'Text editor', etc. The FilePath will be the full path to the executable file. Currently this program only runs on Windows, so the path should start with a drive letter and will most likely be 'C:\\'. Since this key takes a string as its value, backslashes will have to be escaped. The Description key is similar to Name in that it's whatever identifying description the user wants to give that entry. The Browser key is a boolean true/false indicating whether the entry is for a browser window. The next two keys, ArgumentCount and ArgumentList, might apply more when the entry is for a browser window, although they can still apply to any startup item. If there are arguments that need to be passed to the program, such as a specific set of pages to open as tabs for a browser window, then those would be added to ArgumentList. The ArgumentList will be an array of strings even if there's only one argument to pass in. ArgumentCount will reflect how many arguments there are to pass, and will be set to '0' if there aren't any arguments. Finally, all the keys are mandatory, although they can be blank strings or arrays, or the number '0', if there's no real value to specify. Note: The startup_data.schema.json file already has all of this information. However, this schema for a startup item can be used when needing to validate a single startup item object against the schema. The startup data schema would only work to validate a full JSON file.",
    "type": "object",
    "properties": {
        "ItemNumber": {
            "type": "integer"
        },
        "Name": {
            "type": "string"
        },
        "FilePath": {
            "type": "string"
        },
        "Description": {
            "type": "string",
            "default": ""
        },
        "Browser": {
            "type": "boolean",
            "default": false
        },
        "ArgumentCount": {
            "type": "integer",
            "default": 0
        },
        "ArgumentList": {
            "type": "array",
            "default": [],
            "items": {
                "type": "string"
            }
        }
    },
    "required": [
        "ItemNumber",
        "Name",
        "FilePath",
        "Description",
        "Browser",
        "ArgumentCount",
        "ArgumentList"
    ],
    "uniqueItems": true,
    "additionalProperties": false
}