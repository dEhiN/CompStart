[
  {
    "id": "m6lb43ytem5bkmaz61h",
    "file": "prodenv/assets/cs-installer/install.ps1",
    "line": 97,
    "message": "Need to set $InstallFullPath because it is currently null so the $FilesList ends up being a list of all files in the cwd",
    "author": "Anonymous",
    "timestamp": "2025-01-31T21:59:21.365Z",
    "thread": [
      {
        "id": "m6lb6fyuwa4n3j4p8jn",
        "message": "The fix is probably to assign $InstallFullPath the value of the current folder of the script (i.e., '.') plus the $InstallerFolder varaiable",
        "author": "Anonymous",
        "timestamp": "2025-01-31T22:01:10.230Z"
      },
      {
        "id": "m6lb7sbhx0uz01rc26",
        "message": "It also may make more sense to replace lines 101-109 with a simple Copy-Item -Recurse $InstallFullPath",
        "author": "Anonymous",
        "timestamp": "2025-01-31T22:02:12.893Z"
      },
      {
        "id": "m6lbtogcmukhwo56eg",
        "message": "$InstallFullPath is now properly set using $PSScriptRoot but the issue still remains",
        "author": "Anonymous",
        "timestamp": "2025-01-31T22:19:14.316Z"
      },
      {
        "id": "m6lbxjgvtgfvb6hl58g",
        "message": "It looks like the problem is that, instead of using a simple Copy-Item -Recurse, a list of the files and folders in $InstallFullPath is taken but then copied over one by one in a loop. The list is populated using Get-ChildItem -Recurse, which correctly preserves the directory structure. But then each item is copied to the CompStart folder in %localappdata%. So, the directory structure isn't recreated",
        "author": "Anonymous",
        "timestamp": "2025-01-31T22:22:14.479Z"
      },
      {
        "id": "m6lc087xqcfkm6pbnd",
        "message": "However, using Copy-Item -Recurse may not be a good solution since currently, with the loop, each item being \"installed\" is shared with the user prior to the copy. Changing the loop to a simple Copy-Item command won't allow for that. If the copying takes a while, the user then just has to wait with no output to show what's going on.",
        "author": "Anonymous",
        "timestamp": "2025-01-31T22:24:19.869Z"
      },
      {
        "id": "m72pvt3ihjw2gtnlkt",
        "message": "Based on the testing done, it looks like each object in $FilesList is a DirectoryInfo object. These objects have certain properties that could be used to recreate the desired directory structure at the install location. See /devenv/data/test-data/ps-commands-output/2025-02-12/test7.txt for more information on the potentially relevant DirectoryInfo object properties.",
        "author": "Anonymous",
        "timestamp": "2025-02-13T02:24:53.262Z"
      },
      {
        "id": "m73mvi1nhm1qvxk0gm",
        "message": "While working on the code changes, a suggestion from GitHub Copilot showed that a DirectoryInfo object has a PSIsContainer attribute. This attribute is true for folders and false for files. This attribute can be used instead of others ones, like Extension or Length, to recreate the CompStart internal directory structure. See both test.txt and test2.txt in /devenv/data/test-data/ps-commands-output/2025-02-13/ for more information.",
        "author": "Anonymous",
        "timestamp": "2025-02-13T17:48:26.267Z"
      }
    ],
    "tags": [],
    "pinned": false,
    "priority": 0,
    "severity": "info",
    "resolved": false
  }
]